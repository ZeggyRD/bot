📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\app_config.json
───────────────────────────────────────
{
    "TRACKS": "C:/Users/ceram/Music/OTWMUSIC/config/tracks.txt",
    "PLAYLISTS": "",
    "ARTISTS": "",
    "ACCOUNTS": "",
    "PROXY": "C:/Users/ceram/Music/OTWMUSIC/config/proxy.txt"
}



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\artist_player.py
───────────────────────────────────────
import uiautomator2 as u2
import subprocess
import time
import random
import sys
import os

# Ruta de artistas
ARTIST_PATH = "data/artists.txt"

# Agregar carpeta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def load_artists():
    with open(ARTIST_PATH, "r") as f:
        return [line.strip() for line in f if line.strip()]

def human_sleep(min_sec=1.5, max_sec=3.5):
    time.sleep(random.uniform(min_sec, max_sec))

def handle_open_with_dialog(d):
    if d(textContains="Spotify").exists(timeout=5):
        print("ðŸ“² Seleccionando Spotify como app predeterminada")
        d(textContains="Spotify").click()
        time.sleep(2)
        if d(textContains="Siempre").exists:
            d(textContains="Siempre").click()
            time.sleep(2)

def open_artist_intent(d, artist_url):
    print("ðŸŽ¤ Abriendo Spotify por intent con URL del artista")
    d.press("home")
    time.sleep(1)
    subprocess.run(["adb", "shell", "am", "start", "-a", "android.intent.action.VIEW", "-d", artist_url])
    time.sleep(6)
    handle_open_with_dialog(d)
    time.sleep(6)

def press_play(d):
    try:
        if d(descriptionContains="Play").exists(timeout=8):
            green_play = d(descriptionContains="Play")
            bounds = green_play.info.get('bounds', {})
            if bounds:
                print("â–¶ï¸ Presionando el botÃ³n verde de Play")
                green_play.click()
    except Exception as e:
        print(f"âš ï¸ Error dando play: {e}")
    time.sleep(2)

def artist_mode():
    print("ðŸŽ¶ Modo Artistas Iniciado")
    artists = load_artists()
    if not artists:
        print("âŒ No hay artistas en el archivo")
        return

    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    device_orders = {device_id: random.sample(artists, len(artists)) for device_id in devices}

    while True:
        for device_id in devices:
            try:
                d = u2.connect_usb(device_id)
                print(f"ðŸ“± Dispositivo: {device_id}")

                artist_queue = device_orders[device_id]
                if not artist_queue:
                    artist_queue = random.sample(artists, len(artists))
                    device_orders[device_id] = artist_queue
                artist_url = artist_queue.pop()

                open_artist_intent(d, artist_url)
                time.sleep(5)
                press_play(d)

            except Exception as e:
                print(f"âŒ Error con el dispositivo {device_id}: {e}")

        print("â±ï¸ Esperando antes de reproducir nuevos artistas")
        wait_minutes = random.randint(3, 5)
        time.sleep(wait_minutes * 60)

if __name__ == "__main__":
    artist_mode()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data_loader.py
───────────────────────────────────────
import os

def accounts():
    """
    Lee cuentas de Spotify desde data/spotify_accounts.txt
    Formato: correo:contraseÃ±a
    """
    file_path = os.path.join("data", "spotify_accounts.txt")
    
    if not os.path.exists(file_path):
        print("âŒ No se encontrÃ³ el archivo de cuentas:", file_path)
        return []

    with open(file_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    result = []
    for line in lines:
        if ":" in line:
            email, pwd = line.strip().split(":", 1)
            result.append((email, pwd))

    return result


def load_data(folder):
    """
    Lee proxies desde data/proxy_pool.txt
    Formato: ip:port:user:password
    """
    proxies = []
    proxy_path = os.path.join(folder, "proxy_pool.txt")

    if os.path.exists(proxy_path):
        with open(proxy_path, "r", encoding="utf-8") as f:
            proxies = [line.strip() for line in f if line.strip()]
    else:
        print("âŒ No se encontrÃ³ el archivo de proxies:", proxy_path)

    return proxies, [], [], [], []



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\main.py
───────────────────────────────────────
import sys
import os
import subprocess
from PyQt5.QtWidgets import (QApplication, QMainWindow, QWidget, QLabel, QLineEdit, 
                             QPushButton, QVBoxLayout, QHBoxLayout, QStackedWidget, 
                             QFileDialog, QFrame, QGridLayout, QComboBox)
from PyQt5.QtGui import QFont, QIcon, QPixmap
from PyQt5.QtCore import Qt, QSize

# Global style variables
BACKGROUND_COLOR = "#121212"  # Dark background
TEXT_COLOR = "#FFFFFF"  # White text
BUTTON_COLOR = "#1DB954"  # Spotify green
SECONDARY_COLOR = "#282828"  # Dark gray for panels

class LoginScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR}; color: {TEXT_COLOR};")
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()
        main_layout.setAlignment(Qt.AlignCenter)
        
        # Title and subtitle
        title_label = QLabel("OTW")
        title_label.setFont(QFont("Segoe UI", 40, QFont.Bold))
        title_label.setAlignment(Qt.AlignCenter)
        
        subtitle_label = QLabel("OTW Music Login")
        subtitle_label.setFont(QFont("Segoe UI", 16))
        subtitle_label.setAlignment(Qt.AlignCenter)
        
        # Login button
        self.login_button = QPushButton("ACCEDER")
        self.login_button.setStyleSheet(f"background-color: {BUTTON_COLOR}; color: {TEXT_COLOR}; border-radius: 20px; padding: 10px;")
        self.login_button.setFont(QFont("Segoe UI", 14, QFont.Bold))
        self.login_button.setMinimumHeight(50)
        self.login_button.setMinimumWidth(200)
        
        # Add widgets to layout
        main_layout.addStretch(1)
        main_layout.addWidget(title_label)
        main_layout.addWidget(subtitle_label)
        main_layout.addSpacing(40)
        main_layout.addWidget(self.login_button, 0, Qt.AlignCenter)
        main_layout.addStretch(1)
        
        # Set layout margins
        main_layout.setContentsMargins(50, 50, 50, 50)
        
        self.setLayout(main_layout)


class MainScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR}; color: {TEXT_COLOR};")
        self.current_mode = "PLAY TRACKS"
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()
        
        # User info section
        user_frame = QFrame()
        user_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        user_layout = QHBoxLayout()
        
        # User icon placeholder
        user_icon = QLabel()
        # In a real implementation, you would load an actual user icon
        user_icon.setFixedSize(40, 40)
        user_icon.setStyleSheet("background-color: #555555; border-radius: 20px;")
        
        # User info
        user_info = QVBoxLayout()
        username_label = QLabel("ROCKSTAR")
        username_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        email_label = QLabel("SonOfGod@Holy.com")
        email_label.setFont(QFont("Segoe UI", 10))
        
        user_info.addWidget(username_label)
        user_info.addWidget(email_label)
        
        user_layout.addWidget(user_icon)
        user_layout.addLayout(user_info)
        user_layout.addStretch()
        
        user_frame.setLayout(user_layout)
        
        # Logo section
        logo_frame = QFrame()
        logo_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        logo_layout = QVBoxLayout()
        
        logo_label = QLabel("OTWMUSIC")  # Using OTWMUSIC as shown in the screenshots
        logo_label.setFont(QFont("Segoe UI", 28, QFont.Bold))
        logo_label.setAlignment(Qt.AlignCenter)
        
        logo_layout.addWidget(logo_label)
        logo_frame.setLayout(logo_layout)
        
        # Mode section
        mode_layout = QVBoxLayout()
        mode_text = QLabel("MODE")
        mode_text.setFont(QFont("Segoe UI", 12))
        mode_text.setAlignment(Qt.AlignCenter)
        
        self.mode_label = QPushButton(self.current_mode)
        self.mode_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        self.mode_label.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px; padding: 5px;")
        self.mode_label.setEnabled(False)
        
        mode_layout.addWidget(mode_text)
        mode_layout.addWidget(self.mode_label)
        
        # Mode buttons (hidden initially but available for switching between modes)
        modes_layout = QHBoxLayout()
        
        self.play_tracks_btn = QPushButton("PLAY TRACKS")
        self.login_btn = QPushButton("LOG IN")
        self.play_artist_btn = QPushButton("PLAY ARTIST")
        self.play_playlists_btn = QPushButton("PLAY PLAYLISTS")
        
        for btn in [self.play_tracks_btn, self.login_btn, self.play_artist_btn, self.play_playlists_btn]:
            btn.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 5px; padding: 5px;")
            btn.setFont(QFont("Segoe UI", 10))
            btn.setFixedHeight(30)
            btn.clicked.connect(self.change_mode)
        
        # Hidden in the UI based on screenshots
        # modes_layout.addWidget(self.play_tracks_btn)
        # modes_layout.addWidget(self.login_btn)
        # modes_layout.addWidget(self.play_artist_btn)
        # modes_layout.addWidget(self.play_playlists_btn)
        
        # Control buttons
        controls_layout = QHBoxLayout()
        
        self.prev_button = QPushButton("â®")
        self.play_button = QPushButton("â–¶ï¸")
        self.next_button = QPushButton("â­")
        
        for btn in [self.prev_button, self.play_button, self.next_button]:
            btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 20px;")
            btn.setFixedSize(60, 60)
            btn.setFont(QFont("Segoe UI", 16))
        
        controls_layout.addStretch()
        controls_layout.addWidget(self.prev_button)
        controls_layout.addWidget(self.play_button)
        controls_layout.addWidget(self.next_button)
        controls_layout.addStretch()
        
        # Navigation buttons
        nav_layout = QHBoxLayout()
        
        self.home_button = QPushButton("ðŸ ")
        self.resource_button = QPushButton("âž•")
        self.settings_button = QPushButton("âš™")
        
        for btn in [self.home_button, self.resource_button, self.settings_button]:
            btn.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: #3D5AFE; border-radius: 5px;")
            btn.setFixedSize(80, 50)
            btn.setFont(QFont("Segoe UI", 14))
        
        nav_layout.addWidget(self.home_button)
        nav_layout.addWidget(self.resource_button)
        nav_layout.addWidget(self.settings_button)
        
        # Developer attribution
        developer_label = QLabel("Developed by GALAXIBYTE")
        developer_label.setFont(QFont("Segoe UI", 8))
        developer_label.setAlignment(Qt.AlignCenter)
        
        # Add all sections to main layout
        main_layout.addWidget(user_frame)
        main_layout.addSpacing(20)
        main_layout.addWidget(logo_frame)
        main_layout.addSpacing(10)
        main_layout.addLayout(mode_layout)
        # main_layout.addLayout(modes_layout)  # Hidden in UI based on screenshots
        main_layout.addSpacing(20)
        main_layout.addLayout(controls_layout)
        main_layout.addStretch()
        main_layout.addLayout(nav_layout)
        main_layout.addWidget(developer_label)
        
        self.setLayout(main_layout)
    
    def change_mode(self):
        sender = self.sender()
        self.current_mode = sender.text()
        self.mode_label.setText(self.current_mode)


class ResourceFilesScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR}; color: {TEXT_COLOR};")
        
        # Store loaded file paths
        self.tracks_file = ""
        self.playlists_file = ""
        self.artists_file = ""
        
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()
        
        # User info section - same as in MainScreen
        user_frame = QFrame()
        user_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        user_layout = QHBoxLayout()
        
        user_icon = QLabel()
        user_icon.setFixedSize(40, 40)
        user_icon.setStyleSheet("background-color: #555555; border-radius: 20px;")
        
        user_info = QVBoxLayout()
        username_label = QLabel("ROCKSTAR")
        username_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        email_label = QLabel("SonOfGod@Holy.com")
        email_label.setFont(QFont("Segoe UI", 10))
        
        user_info.addWidget(username_label)
        user_info.addWidget(email_label)
        
        user_layout.addWidget(user_icon)
        user_layout.addLayout(user_info)
        user_layout.addStretch()
        
        user_frame.setLayout(user_layout)
        
        # Resources title
        resources_title = QLabel("Resources files")
        resources_title.setFont(QFont("Segoe UI", 16, QFont.Bold))
        resources_title.setAlignment(Qt.AlignLeft)
        
        # Resource sections
        # Tracks section
        tracks_frame = QFrame()
        tracks_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        tracks_layout = QHBoxLayout()
        
        tracks_icon = QLabel("ðŸ“‚")
        tracks_icon.setFont(QFont("Segoe UI", 16))
        tracks_icon.setStyleSheet("color: #3D5AFE;")
        
        tracks_info = QVBoxLayout()
        tracks_label = QLabel("Tracks")
        tracks_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        self.tracks_path_label = QLabel("Track file: No file loaded")
        self.tracks_path_label.setFont(QFont("Segoe UI", 10))
        
        tracks_info.addWidget(tracks_label)
        tracks_info.addWidget(self.tracks_path_label)
        
        self.tracks_play_btn = QPushButton("â–¶")
        self.tracks_play_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.tracks_play_btn.setFixedSize(30, 30)
        
        tracks_layout.addWidget(tracks_icon)
        tracks_layout.addLayout(tracks_info)
        tracks_layout.addStretch()
        tracks_layout.addWidget(self.tracks_play_btn)
        
        tracks_frame.setLayout(tracks_layout)
        tracks_frame.mousePressEvent = lambda event: self.window().open_file_dialog("tracks")
        
        # Playlists section
        playlists_frame = QFrame()
        playlists_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        playlists_layout = QHBoxLayout()
        
        playlists_icon = QLabel("ðŸ“‚")
        playlists_icon.setFont(QFont("Segoe UI", 16))
        playlists_icon.setStyleSheet("color: #3D5AFE;")
        
        playlists_info = QVBoxLayout()
        playlists_label = QLabel("Playlists")
        playlists_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        self.playlists_path_label = QLabel("Playlist file: No file loaded")
        self.playlists_path_label.setFont(QFont("Segoe UI", 10))
        
        playlists_info.addWidget(playlists_label)
        playlists_info.addWidget(self.playlists_path_label)
        
        self.playlists_play_btn = QPushButton("â–¶")
        self.playlists_play_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.playlists_play_btn.setFixedSize(30, 30)
        
        playlists_layout.addWidget(playlists_icon)
        playlists_layout.addLayout(playlists_info)
        playlists_layout.addStretch()
        playlists_layout.addWidget(self.playlists_play_btn)
        
        playlists_frame.setLayout(playlists_layout)
        playlists_frame.mousePressEvent = lambda event: self.window().open_file_dialog("playlists")
        
        # Artists section
        artists_frame = QFrame()
        artists_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        artists_layout = QHBoxLayout()
        
        artists_icon = QLabel("ðŸ“‚")
        artists_icon.setFont(QFont("Segoe UI", 16))
        artists_icon.setStyleSheet("color: #3D5AFE;")
        
        artists_info = QVBoxLayout()
        artists_label = QLabel("Artists")
        artists_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        self.artists_path_label = QLabel("Artist file: No file loaded")
        self.artists_path_label.setFont(QFont("Segoe UI", 10))
        
        artists_info.addWidget(artists_label)
        artists_info.addWidget(self.artists_path_label)
        
        self.artists_play_btn = QPushButton("â–¶")
        self.artists_play_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.artists_play_btn.setFixedSize(30, 30)
        
        artists_layout.addWidget(artists_icon)
        artists_layout.addLayout(artists_info)
        artists_layout.addStretch()
        artists_layout.addWidget(self.artists_play_btn)
        
        artists_frame.setLayout(artists_layout)
        artists_frame.mousePressEvent = lambda event: self.window().open_file_dialog("artists")
        
        # Navigation buttons - same as in MainScreen
        nav_layout = QHBoxLayout()
        
        self.home_button = QPushButton("ðŸ ")
        self.resource_button = QPushButton("âž•")
        self.settings_button = QPushButton("âš™")
        
        for btn in [self.home_button, self.resource_button, self.settings_button]:
            btn.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: #3D5AFE; border-radius: 5px;")
            btn.setFixedSize(80, 50)
            btn.setFont(QFont("Segoe UI", 14))
        
        nav_layout.addWidget(self.home_button)
        nav_layout.addWidget(self.resource_button)
        nav_layout.addWidget(self.settings_button)
        
        # Developer attribution
        developer_label = QLabel("Developed by GALAXIBYTE")
        developer_label.setFont(QFont("Segoe UI", 8))
        developer_label.setAlignment(Qt.AlignCenter)
        
        # Add all sections to main layout
        main_layout.addWidget(user_frame)
        main_layout.addSpacing(10)
        main_layout.addWidget(resources_title)
        main_layout.addSpacing(10)
        main_layout.addWidget(tracks_frame)
        main_layout.addSpacing(10)
        main_layout.addWidget(playlists_frame)
        main_layout.addSpacing(10)
        main_layout.addWidget(artists_frame)
        main_layout.addStretch()
        main_layout.addLayout(nav_layout)
        main_layout.addWidget(developer_label)
        
        self.setLayout(main_layout)
    
    def open_file_dialog(self, file_type):
        file_path, _ = QFileDialog.getOpenFileName(self, f"Select {file_type.capitalize()} File", "", "Text Files (*.txt)")

        if file_path:
            # Update local label
            if file_type == "tracks":
                self.tracks_file = file_path
                self.tracks_path_label.setText(f"Track file: {file_path}")
            elif file_type == "playlists":
                self.playlists_file = file_path
                self.playlists_path_label.setText(f"Playlist file: {file_path}")
            elif file_type == "artists":
                self.artists_file = file_path
                self.artists_path_label.setText(f"Artist file: {file_path}")

            # âœ… TambiÃ©n actualizar en el main app
            main_app = self.window()
            if hasattr(main_app, "file_paths"):
                main_app.file_paths[file_type] = file_path
                print(f"âœ… Path actualizado globalmente para {file_type}")
            else:
                print("âš ï¸ No se pudo actualizar el path global.")


class SettingsScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR}; color: {TEXT_COLOR};")
        
        # Store proxy file path
        self.proxy_file = ""
        
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()
        
        # User info section - same as in other screens
        user_frame = QFrame()
        user_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        user_layout = QHBoxLayout()
        
        user_icon = QLabel()
        user_icon.setFixedSize(40, 40)
        user_icon.setStyleSheet("background-color: #555555; border-radius: 20px;")
        
        user_info = QVBoxLayout()
        username_label = QLabel("ROCKSTAR")
        username_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        email_label = QLabel("SonOfGod@Holy.com")
        email_label.setFont(QFont("Segoe UI", 10))
        
        user_info.addWidget(username_label)
        user_info.addWidget(email_label)
        
        user_layout.addWidget(user_icon)
        user_layout.addLayout(user_info)
        user_layout.addStretch()
        
        user_frame.setLayout(user_layout)
        
        # Settings title
        settings_title = QLabel("Settings Options")
        settings_title.setFont(QFont("Segoe UI", 16, QFont.Bold))
        settings_title.setAlignment(Qt.AlignLeft)
        
        # Devices Settings
        devices_frame = QFrame()
        devices_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        devices_layout = QHBoxLayout()
        
        devices_icon = QLabel("ðŸ“±")
        devices_icon.setFont(QFont("Segoe UI", 16))
        devices_icon.setStyleSheet("color: #3D5AFE;")
        
        devices_label = QLabel("Devices settings")
        devices_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        
        devices_layout.addWidget(devices_icon)
        devices_layout.addWidget(devices_label)
        devices_layout.addStretch()
        
        devices_frame.setLayout(devices_layout)
        devices_frame.mousePressEvent = lambda event: self.show_devices_settings()
        
        # Navigation buttons - same as in other screens
        nav_layout = QHBoxLayout()
        
        self.home_button = QPushButton("ðŸ ")
        self.resource_button = QPushButton("âž•")
        self.settings_button = QPushButton("âš™")
        
        for btn in [self.home_button, self.resource_button, self.settings_button]:
            btn.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: #3D5AFE; border-radius: 5px;")
            btn.setFixedSize(80, 50)
            btn.setFont(QFont("Segoe UI", 14))
        
        nav_layout.addWidget(self.home_button)
        nav_layout.addWidget(self.resource_button)
        nav_layout.addWidget(self.settings_button)
        
        # Developer attribution
        developer_label = QLabel("Developed by GALAXIBYTE")
        developer_label.setFont(QFont("Segoe UI", 8))
        developer_label.setAlignment(Qt.AlignCenter)
        
        # Add all sections to main layout
        main_layout.addWidget(user_frame)
        main_layout.addSpacing(10)
        main_layout.addWidget(settings_title)
        main_layout.addSpacing(10)
        main_layout.addWidget(devices_frame)
        main_layout.addStretch()
        main_layout.addLayout(nav_layout)
        main_layout.addWidget(developer_label)
        
        self.setLayout(main_layout)
    
    def show_devices_settings(self):
        # This method would navigate to the devices settings screen
        # For now, we'll just print a message
        print("Navigate to devices settings")


class DevicesSettingsScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR}; color: {TEXT_COLOR};")
        
        # Store proxy file path
        self.proxy_file = ""
        
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()
        
        # Title
        title_frame = QFrame()
        title_frame.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 10px;")
        title_layout = QHBoxLayout()
        
        title_label = QLabel("Devices settings")
        title_label.setFont(QFont("Segoe UI", 16, QFont.Bold))
        
        title_layout.addWidget(title_label)
        title_frame.setLayout(title_layout)
        
        # Set Proxy
        proxy_frame = QFrame()
        proxy_frame.setStyleSheet(f"background-color: #1A1A1A; border: 1px solid #333333; border-radius: 10px;")
        proxy_layout = QHBoxLayout()
        
        proxy_icon = QLabel("ðŸ“¶")
        proxy_icon.setFont(QFont("Segoe UI", 16))
        proxy_icon.setStyleSheet("color: #3D5AFE;")
        
        proxy_info = QVBoxLayout()
        proxy_label = QLabel("Set proxy")
        proxy_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        
        self.country_combo = QComboBox()
        self.country_combo.addItem("Select country")
        self.country_combo.addItems(["USA", "UK", "Canada", "Australia", "Germany", "France", "Spain", "Italy"])
        self.country_combo.setStyleSheet(f"background-color: {SECONDARY_COLOR}; border-radius: 5px; padding: 5px;")
        
        proxy_info.addWidget(proxy_label)
        proxy_info.addWidget(self.country_combo)
        # BotÃ³n para seleccionar archivo de proxy
        self.proxy_file_btn = QPushButton("ðŸ“‚")
        self.proxy_file_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.proxy_file_btn.setFixedSize(30, 30)
        self.proxy_file_btn.clicked.connect(self.open_proxy_file)

        self.proxy_play_btn = QPushButton("â–¶")
        self.proxy_play_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.proxy_play_btn.setFixedSize(30, 30)
        
        proxy_layout.addWidget(proxy_icon)
        proxy_layout.addLayout(proxy_info)
        proxy_layout.addStretch()
        proxy_layout.addWidget(self.proxy_file_btn)
        proxy_layout.addWidget(self.proxy_play_btn)

        
        proxy_frame.setLayout(proxy_layout)
        
        # Required Applications
        apps_frame = QFrame()
        apps_frame.setStyleSheet(f"background-color: #1A1A1A; border: 1px solid #333333; border-radius: 10px;")
        apps_layout = QHBoxLayout()
        
        apps_icon = QLabel("ðŸ“±")
        apps_icon.setFont(QFont("Segoe UI", 16))
        apps_icon.setStyleSheet("color: #3D5AFE;")
        
        apps_label = QLabel("Required applications")
        apps_label.setFont(QFont("Segoe UI", 12, QFont.Bold))
        
        self.apps_play_btn = QPushButton("â–¶")
        self.apps_play_btn.setStyleSheet(f"background-color: #3D5AFE; color: {TEXT_COLOR}; border-radius: 15px;")
        self.apps_play_btn.setFixedSize(30, 30)
        
        apps_layout.addWidget(apps_icon)
        apps_layout.addWidget(apps_label)
        apps_layout.addStretch()
        apps_layout.addWidget(self.apps_play_btn)
        
        apps_frame.setLayout(apps_layout)
        
        # Back button
        self.back_button = QPushButton("Back to Settings")
        self.back_button.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: {TEXT_COLOR}; border-radius: 10px; padding: 5px;")
        self.back_button.setFont(QFont("Segoe UI", 12))
        self.back_button.setMinimumHeight(40)
        
        # Stop All Process button
        self.stop_button = QPushButton("Stop all process")
        self.stop_button.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: {TEXT_COLOR}; border-radius: 10px; padding: 10px;")
        self.stop_button.setFont(QFont("Segoe UI", 12, QFont.Bold))
        self.stop_button.setMinimumHeight(50)
        
        # Navigation buttons - same as in other screens
        nav_layout = QHBoxLayout()
        
        self.home_button = QPushButton("ðŸ ")
        self.resource_button = QPushButton("âž•")
        self.settings_button = QPushButton("âš™")
        
        for btn in [self.home_button, self.resource_button, self.settings_button]:
            btn.setStyleSheet(f"background-color: {SECONDARY_COLOR}; color: #3D5AFE; border-radius: 5px;")
            btn.setFixedSize(80, 50)
            btn.setFont(QFont("Segoe UI", 14))
        
        nav_layout.addWidget(self.home_button)
        nav_layout.addWidget(self.resource_button)
        nav_layout.addWidget(self.settings_button)
        
        # Developer attribution
        developer_label = QLabel("Developed by GALAXIBYTE")
        developer_label.setFont(QFont("Segoe UI", 8))
        developer_label.setAlignment(Qt.AlignCenter)
        
        # Add all sections to main layout
        main_layout.addWidget(title_frame)
        main_layout.addSpacing(20)
        main_layout.addWidget(proxy_frame)
        main_layout.addSpacing(20)
        main_layout.addWidget(apps_frame)
        main_layout.addSpacing(20)
        main_layout.addWidget(self.back_button)
        main_layout.addSpacing(10)
        main_layout.addWidget(self.stop_button)
        main_layout.addStretch()
        main_layout.addLayout(nav_layout)
        main_layout.addWidget(developer_label)
        
        self.setLayout(main_layout)

    def open_proxy_file(self):
        file_path, _ = QFileDialog.getOpenFileName(self, "Selecciona archivo de proxies", "", "Text Files (*.txt)")
        if file_path:
            self.proxy_file = file_path
            print(f"ðŸ“ Archivo de proxy cargado: {file_path}")

            # âœ… AsegÃºrate que el parent sea el main app para guardar el path
            main_window = self.window()
            if hasattr(main_window, "file_paths"):
                main_window.file_paths["proxy"] = file_path
            else:
                print("âš ï¸ No se pudo actualizar el path global del proxy.")

class OTWMusicApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("OTW MUSIC SYSTEM")
        self.setStyleSheet(f"background-color: {BACKGROUND_COLOR};")
        self.resize(400, 600)
        
        # Create stacked widget for multiple screens
        self.stacked_widget = QStackedWidget()
        
        # Create screens
        self.login_screen = LoginScreen()
        self.main_screen = MainScreen()
        self.resource_screen = ResourceFilesScreen()
        self.settings_screen = SettingsScreen()
        self.devices_settings_screen = DevicesSettingsScreen()
        
        # Add screens to stacked widget
        self.stacked_widget.addWidget(self.login_screen)
        self.stacked_widget.addWidget(self.main_screen)
        self.stacked_widget.addWidget(self.resource_screen)
        self.stacked_widget.addWidget(self.settings_screen)
        self.stacked_widget.addWidget(self.devices_settings_screen)
        
        # Set central widget
        self.setCentralWidget(self.stacked_widget)
        
        # Connect signals
        self.connect_signals()
        
        # Script to mode mapping
        self.script_mapping = {
            "PLAY TRACKS": "track_player.py",
            "LOG IN": "spotify_login.py",
            "PLAY ARTIST": "artist_player.py",
            "PLAY PLAYLISTS": "playlist_player.py"
        }
        
        # Store loaded file paths
        self.file_paths = {
            "tracks": "",
            "playlists": "",
            "artists": "",
            "proxy": ""
        }

    def connect_signals(self):
        # Login screen
        self.login_screen.login_button.clicked.connect(self.go_to_main)
        
        # Main screen
        self.main_screen.home_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.main_screen))
        self.main_screen.resource_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.resource_screen))
        self.main_screen.settings_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.settings_screen))
        self.main_screen.play_button.clicked.connect(self.play_current_mode)
        
        # Mode change buttons
        self.main_screen.play_tracks_btn.clicked.connect(self.main_screen.change_mode)
        self.main_screen.login_btn.clicked.connect(self.main_screen.change_mode)
        self.main_screen.play_artist_btn.clicked.connect(self.main_screen.change_mode)
        self.main_screen.play_playlists_btn.clicked.connect(self.main_screen.change_mode)
        
        # Add mode changing functionality to prev/next buttons
        self.main_screen.prev_button.clicked.connect(self.previous_mode)
        self.main_screen.next_button.clicked.connect(self.next_mode)
        
        # Resource screen
        self.resource_screen.home_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.main_screen))
        self.resource_screen.resource_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.resource_screen))
        self.resource_screen.settings_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.settings_screen))
        self.resource_screen.tracks_play_btn.clicked.connect(lambda: self.play_resource("track_player.py"))
        self.resource_screen.playlists_play_btn.clicked.connect(lambda: self.play_resource("playlist_player.py"))
        self.resource_screen.artists_play_btn.clicked.connect(lambda: self.play_resource("artist_player.py"))
        
        # Settings screen
        self.settings_screen.home_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.main_screen))
        self.settings_screen.resource_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.resource_screen))
        self.settings_screen.settings_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.settings_screen))
        
        # Devices settings navigation
        self.settings_screen.show_devices_settings = lambda: self.stacked_widget.setCurrentWidget(self.devices_settings_screen)
        
        # Devices settings screen - navigation
        self.devices_settings_screen.home_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.main_screen))
        self.devices_settings_screen.resource_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.resource_screen))
        self.devices_settings_screen.settings_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.settings_screen))
        self.devices_settings_screen.back_button.clicked.connect(lambda: self.stacked_widget.setCurrentWidget(self.settings_screen))
        
        # Devices settings screen - functionality
        self.devices_settings_screen.proxy_play_btn.clicked.connect(lambda: self.play_script("set_proxy.py"))
        self.devices_settings_screen.apps_play_btn.clicked.connect(lambda: self.play_script("install_apps.py"))
        self.devices_settings_screen.stop_button.clicked.connect(lambda: self.play_script("stop_all.py"))
        
        # Resource file selection handlers
        self.resource_screen.open_file_dialog = self.open_file_dialog
    
    def previous_mode(self):
        """Switch to the previous mode when prev button is clicked"""
        modes = list(self.script_mapping.keys())
        current_index = modes.index(self.main_screen.current_mode)
        previous_index = (current_index - 1) % len(modes)
        self.main_screen.current_mode = modes[previous_index]
        self.main_screen.mode_label.setText(modes[previous_index])
    
    def next_mode(self):
        """Switch to the next mode when next button is clicked"""
        modes = list(self.script_mapping.keys())
        current_index = modes.index(self.main_screen.current_mode)
        next_index = (current_index + 1) % len(modes)
        self.main_screen.current_mode = modes[next_index]
        self.main_screen.mode_label.setText(modes[next_index])
        
    def go_to_main(self):
        # Simply navigate to main screen, no validation needed
        self.stacked_widget.setCurrentWidget(self.main_screen)
    
    def open_file_dialog(self, file_type):
        """Open file dialog and store the selected file path"""
        file_path, _ = QFileDialog.getOpenFileName(self, f"Select {file_type.capitalize()} File", "", "Text Files (*.txt)")
        
        if file_path:
            # Update the file path in the app's state
            self.file_paths[file_type] = file_path
            
            # Update the UI label
            if file_type == "tracks":
                self.resource_screen.tracks_file = file_path
                self.resource_screen.tracks_path_label.setText(f"Track file: {file_path}")
            elif file_type == "playlists":
                self.resource_screen.playlists_file = file_path
                self.resource_screen.playlists_path_label.setText(f"Playlist file: {file_path}")
            elif file_type == "artists":
                self.resource_screen.artists_file = file_path
                self.resource_screen.artists_path_label.setText(f"Artist file: {file_path}")
            elif file_type == "proxy":
                # For proxy file in settings
                self.file_paths["proxy"] = file_path
                # Update proxy UI (not shown in this template)
    
    def play_current_mode(self):
        current_mode = self.main_screen.current_mode
        script_name = self.script_mapping.get(current_mode)

        if script_name:
            # Special case for LOG IN mode - no file checks needed
            if current_mode == "LOG IN":
                print(f"â–¶ï¸ Ejecutando script: {script_name}")
                subprocess.Popen(['python', script_name])
                return

            # Validaciones por modo
            if current_mode == "PLAY TRACKS" and not self.file_paths.get("tracks"):
                print("No tracks file loaded")
                return
            elif current_mode == "PLAY PLAYLISTS" and not self.file_paths.get("playlists"):
                print("No playlists file loaded")
                return
            elif current_mode == "PLAY ARTIST" and not self.file_paths.get("artists"):
                print("No artists file loaded")
                return

        # âœ… AquÃ­ ya se cargaron los archivos, asÃ­ que ejecutamos el script:
            script_path = os.path.join("scripts", script_name)
            print(f"â–¶ï¸ Ejecutando script: {script_path}")
            subprocess.Popen(['python', script_path])
            return
        
        # Script execution would be something like:
        # subprocess.Popen(['python', f'scripts/{script_name}'])
    
    def play_resource(self, script_name):
        """Handle play button from resource screen"""
        # Check which script is being called and if we have a file loaded
        if script_name == "track_player.py" and not self.file_paths.get("tracks"):
            print("No tracks file loaded")
            return
        elif script_name == "playlist_player.py" and not self.file_paths.get("playlists"):
            print("No playlists file loaded")
            return
        elif script_name == "artist_player.py" and not self.file_paths.get("artists"):
            print("No artists file loaded")
            return
            
        # In a real implementation, we would execute the script
        # For the template, we just print what script would be called
        print(f"Would execute script: {script_name}")

    def play_script(self, script_name):
        """Handle play button for settings scripts"""
        if script_name == "set_proxy.py" and not self.file_paths.get("proxy"):
            print("No proxy file loaded")
            return

        print(f"âœ… Proxy play pressed")
        script_path = os.path.join("scripts", script_name)
        print(f"â–¶ï¸ Ejecutando script real: {script_path}")
        subprocess.Popen(['python', script_path])

def main():
    app = QApplication(sys.argv)
    window = OTWMusicApp()
    
    # Set the window icon and style
    # app.setWindowIcon(QIcon("path/to/icon.png"))
    
    # Show the login screen first
    window.show()
    
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\playlist_player.py
───────────────────────────────────────
import uiautomator2 as u2
import subprocess
import time
import random
import sys
import os

# Ruta de playlists
PLAYLIST_PATH = "data/playlists.txt"
FAVORITE_ARTISTS = ["Cerame", "Kairo la Sinfonia", "G Many", "Zeggy Beats"]

# Agregar carpeta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def load_playlists():
    with open(PLAYLIST_PATH, "r") as f:
        return [line.strip() for line in f if line.strip()]

def human_sleep(min_sec=1.5, max_sec=3.5):
    time.sleep(random.uniform(min_sec, max_sec))

def handle_open_with_dialog(d):
    if d(textContains="Spotify").exists(timeout=5):
        print("ðŸ“² Seleccionando Spotify como app predeterminada")
        d(textContains="Spotify").click()
        time.sleep(2)
        if d(textContains="Siempre").exists:
            d(textContains="Siempre").click()
            time.sleep(2)

def open_playlist_intent(d, playlist_url):
    print("ðŸŽµ Abriendo Spotify por intent con URL")
    d.press("home")
    time.sleep(1)
    subprocess.run(["adb", "shell", "am", "start", "-a", "android.intent.action.VIEW", "-d", playlist_url])
    time.sleep(6)
    handle_open_with_dialog(d)
    time.sleep(6)

def like_playlist_if_needed(d):
    try:
        if d(descriptionContains="Add to Your Library").exists(timeout=5):
            d(descriptionContains="Add to Your Library").click()
            print("â¤ï¸ Playlist guardada")
    except Exception as e:
        print(f"âš ï¸ Error al dar like a la playlist: {e}")
    time.sleep(2)

def activate_shuffle(d):
    try:
        if d(descriptionContains="Shuffle").exists(timeout=6):
            d(descriptionContains="Shuffle").click()
            time.sleep(3)
            if d(textContains="Smart Shuffle").exists(timeout=3):
                d(textContains="Shuffle").click()
                print("ðŸ”€ Shuffle activado (modo simple)")
            else:
                print("ðŸ”€ Shuffle activado")
    except Exception as e:
        print(f"âš ï¸ Error activando shuffle: {e}")
    time.sleep(2)

def press_play(d):
    try:
        # Busca especÃ­ficamente el botÃ³n VERDE de Play
        if d(descriptionContains="Play").exists(timeout=6):
            green_play = d(descriptionContains="Play")
            bounds = green_play.info.get('bounds', {})
            if bounds:
                print("â–¶ï¸ Presionando el botÃ³n verde de Play")
                green_play.click()
    except Exception as e:
        print(f"âš ï¸ Error dando play: {e}")
    time.sleep(2)

def scroll_and_interact(d):
    print("ðŸ‘† Explorando como fan")
    for _ in range(random.randint(3, 5)):
        d.swipe(0.5, 0.9, 0.5, 0.2)
        time.sleep(random.uniform(2, 4))
        if d(descriptionContains="Like").exists:
            d(descriptionContains="Like").click_exists(timeout=2)
            print("ðŸ’š Like a canciÃ³n")
        time.sleep(random.uniform(2, 5))

def playlist_mode():
    print("ðŸŽ¶ Modo Playlist Iniciado")
    playlists = load_playlists()
    if not playlists:
        print("âŒ No hay playlists en el archivo")
        return

    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    device_orders = {device_id: random.sample(playlists, len(playlists)) for device_id in devices}

    while True:
        for device_id in devices:
            try:
                d = u2.connect_usb(device_id)
                print(f"ðŸ“± Dispositivo: {device_id}")

                playlist_queue = device_orders[device_id]
                if not playlist_queue:
                    playlist_queue = random.sample(playlists, len(playlists))
                    device_orders[device_id] = playlist_queue
                playlist_url = playlist_queue.pop()

                open_playlist_intent(d, playlist_url)
                time.sleep(5)

                action_order = random.sample([like_playlist_if_needed, activate_shuffle, press_play], 3)
                for action in action_order:
                    action(d)
                    human_sleep(1, 3)

                print("ðŸ§  Simulando comportamiento humano por 10 minutos")
                scroll_and_interact(d)
                time.sleep(random.randint(600, 660))

                print("ðŸ§˜â€â™‚ï¸ Esperando 30 minutos antes de repetir...")
                time.sleep(random.randint(1800, 2100))

            except Exception as e:
                print(f"âŒ Error con el dispositivo {device_id}: {e}")

if __name__ == "__main__":
    playlist_mode()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\proxy_pool.txt
───────────────────────────────────────
149.6.162.2:80:fpelmuks-1:0lrxoh26it92
149.14.243.178:80:fpelmuks-2:0lrxoh26it92
146.70.40.94:80:fpelmuks-3:0lrxoh26it92
149.6.162.10:80:fpelmuks-4:0lrxoh26it92
154.13.90.91:80:fpelmuks-5:0lrxoh26it92
107.155.114.18:80:fpelmuks-6:0lrxoh26it92
185.76.11.212:80:fpelmuks-7:0lrxoh26it92
107.155.114.2:80:fpelmuks-8:0lrxoh26it92
149.6.162.2:80:fpelmuks-9:0lrxoh26it92
149.14.243.178:80:fpelmuks-10:0lrxoh26it92
146.70.40.94:80:fpelmuks-11:0lrxoh26it92
149.6.162.10:80:fpelmuks-12:0lrxoh26it92
154.13.90.91:80:fpelmuks-13:0lrxoh26it92
107.155.114.18:80:fpelmuks-14:0lrxoh26it92
185.76.11.212:80:fpelmuks-15:0lrxoh26it92
107.155.114.2:80:fpelmuks-16:0lrxoh26it92
149.6.162.2:80:fpelmuks-17:0lrxoh26it92
149.14.243.178:80:fpelmuks-18:0lrxoh26it92
146.70.40.94:80:fpelmuks-19:0lrxoh26it92
149.6.162.10:80:fpelmuks-20:0lrxoh26it92
154.13.90.91:80:fpelmuks-21:0lrxoh26it92
107.155.114.18:80:fpelmuks-22:0lrxoh26it92
185.76.11.212:80:fpelmuks-23:0lrxoh26it92
107.155.114.2:80:fpelmuks-24:0lrxoh26it92
149.6.162.2:80:fpelmuks-25:0lrxoh26it92
149.14.243.178:80:fpelmuks-26:0lrxoh26it92
146.70.40.94:80:fpelmuks-27:0lrxoh26it92
149.6.162.10:80:fpelmuks-28:0lrxoh26it92
154.13.90.91:80:fpelmuks-29:0lrxoh26it92
107.155.114.18:80:fpelmuks-30:0lrxoh26it92
185.76.11.212:80:fpelmuks-31:0lrxoh26it92
107.155.114.2:80:fpelmuks-32:0lrxoh26it92
149.6.162.2:80:fpelmuks-33:0lrxoh26it92
149.14.243.178:80:fpelmuks-34:0lrxoh26it92
146.70.40.94:80:fpelmuks-35:0lrxoh26it92
149.6.162.10:80:fpelmuks-36:0lrxoh26it92
154.13.90.91:80:fpelmuks-37:0lrxoh26it92
107.155.114.18:80:fpelmuks-38:0lrxoh26it92
185.76.11.212:80:fpelmuks-39:0lrxoh26it92
107.155.114.2:80:fpelmuks-40:0lrxoh26it92
149.6.162.2:80:fpelmuks-41:0lrxoh26it92
149.14.243.178:80:fpelmuks-42:0lrxoh26it92
146.70.40.94:80:fpelmuks-43:0lrxoh26it92
149.6.162.10:80:fpelmuks-44:0lrxoh26it92
154.13.90.91:80:fpelmuks-45:0lrxoh26it92
107.155.114.18:80:fpelmuks-46:0lrxoh26it92
185.76.11.212:80:fpelmuks-47:0lrxoh26it92
107.155.114.2:80:fpelmuks-48:0lrxoh26it92
149.6.162.2:80:fpelmuks-49:0lrxoh26it92
149.14.243.178:80:fpelmuks-50:0lrxoh26it92
146.70.40.94:80:fpelmuks-51:0lrxoh26it92
149.6.162.10:80:fpelmuks-52:0lrxoh26it92
154.13.90.91:80:fpelmuks-53:0lrxoh26it92
107.155.114.18:80:fpelmuks-54:0lrxoh26it92
185.76.11.212:80:fpelmuks-55:0lrxoh26it92
107.155.114.2:80:fpelmuks-56:0lrxoh26it92
149.6.162.2:80:fpelmuks-57:0lrxoh26it92
149.14.243.178:80:fpelmuks-58:0lrxoh26it92
146.70.40.94:80:fpelmuks-59:0lrxoh26it92
149.6.162.10:80:fpelmuks-60:0lrxoh26it92
154.13.90.91:80:fpelmuks-61:0lrxoh26it92
107.155.114.18:80:fpelmuks-62:0lrxoh26it92
185.76.11.212:80:fpelmuks-63:0lrxoh26it92
107.155.114.2:80:fpelmuks-64:0lrxoh26it92
149.6.162.2:80:fpelmuks-65:0lrxoh26it92
149.14.243.178:80:fpelmuks-66:0lrxoh26it92
146.70.40.94:80:fpelmuks-67:0lrxoh26it92
149.6.162.10:80:fpelmuks-68:0lrxoh26it92
154.13.90.91:80:fpelmuks-69:0lrxoh26it92
107.155.114.18:80:fpelmuks-70:0lrxoh26it92
185.76.11.212:80:fpelmuks-71:0lrxoh26it92
107.155.114.2:80:fpelmuks-72:0lrxoh26it92
149.6.162.2:80:fpelmuks-73:0lrxoh26it92
149.14.243.178:80:fpelmuks-74:0lrxoh26it92
146.70.40.94:80:fpelmuks-75:0lrxoh26it92
149.6.162.10:80:fpelmuks-76:0lrxoh26it92
154.13.90.91:80:fpelmuks-77:0lrxoh26it92
107.155.114.18:80:fpelmuks-78:0lrxoh26it92
185.76.11.212:80:fpelmuks-79:0lrxoh26it92
107.155.114.2:80:fpelmuks-80:0lrxoh26it92
149.6.162.2:80:fpelmuks-81:0lrxoh26it92
149.14.243.178:80:fpelmuks-82:0lrxoh26it92
146.70.40.94:80:fpelmuks-83:0lrxoh26it92
149.6.162.10:80:fpelmuks-84:0lrxoh26it92
154.13.90.91:80:fpelmuks-85:0lrxoh26it92
107.155.114.18:80:fpelmuks-86:0lrxoh26it92
185.76.11.212:80:fpelmuks-87:0lrxoh26it92
107.155.114.2:80:fpelmuks-88:0lrxoh26it92
149.6.162.2:80:fpelmuks-89:0lrxoh26it92
149.14.243.178:80:fpelmuks-90:0lrxoh26it92
146.70.40.94:80:fpelmuks-91:0lrxoh26it92
149.6.162.10:80:fpelmuks-92:0lrxoh26it92
154.13.90.91:80:fpelmuks-93:0lrxoh26it92
107.155.114.18:80:fpelmuks-94:0lrxoh26it92
185.76.11.212:80:fpelmuks-95:0lrxoh26it92
107.155.114.2:80:fpelmuks-96:0lrxoh26it92
149.6.162.2:80:fpelmuks-97:0lrxoh26it92
149.14.243.178:80:fpelmuks-98:0lrxoh26it92
146.70.40.94:80:fpelmuks-99:0lrxoh26it92
149.6.162.10:80:fpelmuks-100:0lrxoh26it92
154.13.90.91:80:fpelmuks-101:0lrxoh26it92
107.155.114.18:80:fpelmuks-102:0lrxoh26it92
185.76.11.212:80:fpelmuks-103:0lrxoh26it92
107.155.114.2:80:fpelmuks-104:0lrxoh26it92
149.6.162.2:80:fpelmuks-105:0lrxoh26it92
149.14.243.178:80:fpelmuks-106:0lrxoh26it92
146.70.40.94:80:fpelmuks-107:0lrxoh26it92
149.6.162.10:80:fpelmuks-108:0lrxoh26it92
154.13.90.91:80:fpelmuks-109:0lrxoh26it92
107.155.114.18:80:fpelmuks-110:0lrxoh26it92
185.76.11.212:80:fpelmuks-111:0lrxoh26it92
107.155.114.2:80:fpelmuks-112:0lrxoh26it92
149.6.162.2:80:fpelmuks-113:0lrxoh26it92
149.14.243.178:80:fpelmuks-114:0lrxoh26it92
146.70.40.94:80:fpelmuks-115:0lrxoh26it92
149.6.162.10:80:fpelmuks-116:0lrxoh26it92
154.13.90.91:80:fpelmuks-117:0lrxoh26it92
107.155.114.18:80:fpelmuks-118:0lrxoh26it92
185.76.11.212:80:fpelmuks-119:0lrxoh26it92
107.155.114.2:80:fpelmuks-120:0lrxoh26it92
149.6.162.2:80:fpelmuks-121:0lrxoh26it92
149.14.243.178:80:fpelmuks-122:0lrxoh26it92
146.70.40.94:80:fpelmuks-123:0lrxoh26it92
149.6.162.10:80:fpelmuks-124:0lrxoh26it92
154.13.90.91:80:fpelmuks-125:0lrxoh26it92
107.155.114.18:80:fpelmuks-126:0lrxoh26it92
185.76.11.212:80:fpelmuks-127:0lrxoh26it92
107.155.114.2:80:fpelmuks-128:0lrxoh26it92
149.6.162.2:80:fpelmuks-129:0lrxoh26it92
149.14.243.178:80:fpelmuks-130:0lrxoh26it92
146.70.40.94:80:fpelmuks-131:0lrxoh26it92
149.6.162.10:80:fpelmuks-132:0lrxoh26it92
154.13.90.91:80:fpelmuks-133:0lrxoh26it92
107.155.114.18:80:fpelmuks-134:0lrxoh26it92
185.76.11.212:80:fpelmuks-135:0lrxoh26it92
107.155.114.2:80:fpelmuks-136:0lrxoh26it92
149.6.162.2:80:fpelmuks-137:0lrxoh26it92
149.14.243.178:80:fpelmuks-138:0lrxoh26it92
146.70.40.94:80:fpelmuks-139:0lrxoh26it92
149.6.162.10:80:fpelmuks-140:0lrxoh26it92
154.13.90.91:80:fpelmuks-141:0lrxoh26it92
107.155.114.18:80:fpelmuks-142:0lrxoh26it92
185.76.11.212:80:fpelmuks-143:0lrxoh26it92
107.155.114.2:80:fpelmuks-144:0lrxoh26it92
149.6.162.2:80:fpelmuks-145:0lrxoh26it92
149.14.243.178:80:fpelmuks-146:0lrxoh26it92
146.70.40.94:80:fpelmuks-147:0lrxoh26it92
149.6.162.10:80:fpelmuks-148:0lrxoh26it92
154.13.90.91:80:fpelmuks-149:0lrxoh26it92
107.155.114.18:80:fpelmuks-150:0lrxoh26it92
185.76.11.212:80:fpelmuks-151:0lrxoh26it92
107.155.114.2:80:fpelmuks-152:0lrxoh26it92
149.6.162.2:80:fpelmuks-153:0lrxoh26it92
149.14.243.178:80:fpelmuks-154:0lrxoh26it92
146.70.40.94:80:fpelmuks-155:0lrxoh26it92
149.6.162.10:80:fpelmuks-156:0lrxoh26it92
154.13.90.91:80:fpelmuks-157:0lrxoh26it92
107.155.114.18:80:fpelmuks-158:0lrxoh26it92
185.76.11.212:80:fpelmuks-159:0lrxoh26it92
107.155.114.2:80:fpelmuks-160:0lrxoh26it92
149.6.162.2:80:fpelmuks-161:0lrxoh26it92
149.14.243.178:80:fpelmuks-162:0lrxoh26it92
146.70.40.94:80:fpelmuks-163:0lrxoh26it92
149.6.162.10:80:fpelmuks-164:0lrxoh26it92
154.13.90.91:80:fpelmuks-165:0lrxoh26it92
107.155.114.18:80:fpelmuks-166:0lrxoh26it92
185.76.11.212:80:fpelmuks-167:0lrxoh26it92
107.155.114.2:80:fpelmuks-168:0lrxoh26it92
149.6.162.2:80:fpelmuks-169:0lrxoh26it92
149.14.243.178:80:fpelmuks-170:0lrxoh26it92
146.70.40.94:80:fpelmuks-171:0lrxoh26it92
149.6.162.10:80:fpelmuks-172:0lrxoh26it92
154.13.90.91:80:fpelmuks-173:0lrxoh26it92
107.155.114.18:80:fpelmuks-174:0lrxoh26it92
185.76.11.212:80:fpelmuks-175:0lrxoh26it92
107.155.114.2:80:fpelmuks-176:0lrxoh26it92
149.6.162.2:80:fpelmuks-177:0lrxoh26it92
149.14.243.178:80:fpelmuks-178:0lrxoh26it92
146.70.40.94:80:fpelmuks-179:0lrxoh26it92
149.6.162.10:80:fpelmuks-180:0lrxoh26it92
154.13.90.91:80:fpelmuks-181:0lrxoh26it92
107.155.114.18:80:fpelmuks-182:0lrxoh26it92
185.76.11.212:80:fpelmuks-183:0lrxoh26it92
107.155.114.2:80:fpelmuks-184:0lrxoh26it92
149.6.162.2:80:fpelmuks-185:0lrxoh26it92
149.14.243.178:80:fpelmuks-186:0lrxoh26it92
146.70.40.94:80:fpelmuks-187:0lrxoh26it92
149.6.162.10:80:fpelmuks-188:0lrxoh26it92
154.13.90.91:80:fpelmuks-189:0lrxoh26it92
107.155.114.18:80:fpelmuks-190:0lrxoh26it92
185.76.11.212:80:fpelmuks-191:0lrxoh26it92
107.155.114.2:80:fpelmuks-192:0lrxoh26it92
149.6.162.2:80:fpelmuks-193:0lrxoh26it92
149.14.243.178:80:fpelmuks-194:0lrxoh26it92
146.70.40.94:80:fpelmuks-195:0lrxoh26it92
149.6.162.10:80:fpelmuks-196:0lrxoh26it92
154.13.90.91:80:fpelmuks-197:0lrxoh26it92
107.155.114.18:80:fpelmuks-198:0lrxoh26it92
185.76.11.212:80:fpelmuks-199:0lrxoh26it92
107.155.114.2:80:fpelmuks-200:0lrxoh26it92
149.6.162.2:80:fpelmuks-201:0lrxoh26it92
149.14.243.178:80:fpelmuks-202:0lrxoh26it92
146.70.40.94:80:fpelmuks-203:0lrxoh26it92
149.6.162.10:80:fpelmuks-204:0lrxoh26it92
154.13.90.91:80:fpelmuks-205:0lrxoh26it92
107.155.114.18:80:fpelmuks-206:0lrxoh26it92
185.76.11.212:80:fpelmuks-207:0lrxoh26it92
107.155.114.2:80:fpelmuks-208:0lrxoh26it92
149.6.162.2:80:fpelmuks-209:0lrxoh26it92
149.14.243.178:80:fpelmuks-210:0lrxoh26it92
146.70.40.94:80:fpelmuks-211:0lrxoh26it92
149.6.162.10:80:fpelmuks-212:0lrxoh26it92
154.13.90.91:80:fpelmuks-213:0lrxoh26it92
107.155.114.18:80:fpelmuks-214:0lrxoh26it92
185.76.11.212:80:fpelmuks-215:0lrxoh26it92
107.155.114.2:80:fpelmuks-216:0lrxoh26it92
149.6.162.2:80:fpelmuks-217:0lrxoh26it92
149.14.243.178:80:fpelmuks-218:0lrxoh26it92
146.70.40.94:80:fpelmuks-219:0lrxoh26it92
149.6.162.10:80:fpelmuks-220:0lrxoh26it92
154.13.90.91:80:fpelmuks-221:0lrxoh26it92
107.155.114.18:80:fpelmuks-222:0lrxoh26it92
185.76.11.212:80:fpelmuks-223:0lrxoh26it92
107.155.114.2:80:fpelmuks-224:0lrxoh26it92
149.6.162.2:80:fpelmuks-225:0lrxoh26it92
149.14.243.178:80:fpelmuks-226:0lrxoh26it92
146.70.40.94:80:fpelmuks-227:0lrxoh26it92
149.6.162.10:80:fpelmuks-228:0lrxoh26it92
154.13.90.91:80:fpelmuks-229:0lrxoh26it92
107.155.114.18:80:fpelmuks-230:0lrxoh26it92
185.76.11.212:80:fpelmuks-231:0lrxoh26it92
107.155.114.2:80:fpelmuks-232:0lrxoh26it92
149.6.162.2:80:fpelmuks-233:0lrxoh26it92
149.14.243.178:80:fpelmuks-234:0lrxoh26it92
146.70.40.94:80:fpelmuks-235:0lrxoh26it92
149.6.162.10:80:fpelmuks-236:0lrxoh26it92
154.13.90.91:80:fpelmuks-237:0lrxoh26it92
107.155.114.18:80:fpelmuks-238:0lrxoh26it92
185.76.11.212:80:fpelmuks-239:0lrxoh26it92
107.155.114.2:80:fpelmuks-240:0lrxoh26it92
149.6.162.2:80:fpelmuks-241:0lrxoh26it92
149.14.243.178:80:fpelmuks-242:0lrxoh26it92
146.70.40.94:80:fpelmuks-243:0lrxoh26it92
149.6.162.10:80:fpelmuks-244:0lrxoh26it92
154.13.90.91:80:fpelmuks-245:0lrxoh26it92
107.155.114.18:80:fpelmuks-246:0lrxoh26it92
185.76.11.212:80:fpelmuks-247:0lrxoh26it92
107.155.114.2:80:fpelmuks-248:0lrxoh26it92
149.6.162.2:80:fpelmuks-249:0lrxoh26it92
149.14.243.178:80:fpelmuks-250:0lrxoh26it92



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\set_proxy.py
───────────────────────────────────────

import uiautomator2 as u2
import subprocess
import time
import sys
import os

# Agregar la raÃ­z del proyecto al path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from modules.data_loader import load_data

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def fill_field(d, label, value, max_swipes=3):
    for _ in range(max_swipes):
        if d(text=label).exists:
            break
        d.swipe(0.5, 0.8, 0.5, 0.2)
        time.sleep(0.5)

    if not d(text=label).wait(timeout=5):
        print(f"âŒ No se encontrÃ³ el campo {label}")
        return False

    print(f"âŒ¨ï¸ Escribiendo {label}...")
    d(text=label).click()
    time.sleep(0.4)
    d.clear_text()
    time.sleep(0.3)
    d.send_keys(value)
    time.sleep(0.3)

    if d(text="OK").exists:
        d(text="OK").click()
        time.sleep(0.3)

    return True

def force_turn_on_proxy(d):
    try:
        toggle_btn = d(resourceId="net.typeblog.socks:id/switch_action_button")
        if toggle_btn.exists:
            print("âš¡ Intentando encender el proxy...")
            toggle_btn.click()
            time.sleep(2)
            print("âœ… BotÃ³n presionado para encender proxy.")
        else:
            print("âŒ No se encontrÃ³ el botÃ³n de encendido del proxy.")
    except Exception as e:
        print(f"âš ï¸ Error al intentar encender el proxy: {e}")

def go_to_fast_com(d):
    try:
        print("ðŸŒ Abriendo fast.com para verificar conexiÃ³n...")
        d.app_start("com.android.chrome")
        time.sleep(5)
        d.send_keys("https://fast.com/es/")
        d.press("enter")
        time.sleep(10)
    except Exception as e:
        print(f"âš ï¸ Error al abrir fast.com: {e}")

def set_proxy():
    proxies, _, _, _, _ = load_data(".")
    print("ðŸ” Proxies cargados:")
    for p in proxies:
        print("  -", p)

    if not proxies:
        print("âŒ No hay proxies en proxy_pool.txt")
        return

    device_ids = get_connected_devices()
    if not device_ids:
        print("âŒ No hay dispositivos conectados")
        return

    for i, device_id in enumerate(device_ids):
        print(f"\nðŸš€ Configurando proxy en {device_id}â€¦")

        if i >= len(proxies):
            print("âš ï¸ No hay suficientes proxies para este dispositivo.")
            continue

        try:
            ip, port, user, passwd = proxies[i].strip().split(":")

            d = u2.connect_usb(device_id)
            print(f"âœ… Conectado: {device_id} | Proxy: {ip}:{port}")

            d.app_start("net.typeblog.socks")
            time.sleep(3)

            fill_field(d, "Server IP", ip)
            fill_field(d, "Server Port", port)
            fill_field(d, "Username", user)
            fill_field(d, "Password", passwd)

            force_turn_on_proxy(d)
            print(f"âœ… Proxy {ip}:{port} aplicado en {device_id}")

            go_to_fast_com(d)

        except Exception as e:
            print(f"âŒ Error en {device_id}: {e}")

if __name__ == '__main__':
    set_proxy()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\spotify_login.py
───────────────────────────────────────
# spotify_login.py
import subprocess
import time
import random
import threading
import sys
import pathlib

sys.path.insert(0, str(pathlib.Path(__file__).resolve().parent))
from data_loader import accounts

def tap(device, x, y, pause=0.5):
    subprocess.run(["adb", "-s", device, "shell", "input", "tap", str(int(x)), str(int(y))])
    time.sleep(pause)

def clear_field(device):
    subprocess.run(["adb", "-s", device, "shell", "input", "keyevent", "123"])  # mover al final
    for _ in range(15):
        subprocess.run(["adb", "-s", device, "shell", "input", "keyevent", "67"])  # borrar
    time.sleep(0.2)

def type_text(device, text):
    subprocess.run(["adb", "-s", device, "shell", "input", "text", text])
    time.sleep(0.3)

def login(device, email, pwd):
    print(f"\nðŸ“² [{device}] Login con {email}")
    
    # 1. Abrir Spotify
    subprocess.run([
        "adb", "-s", device, "shell", "monkey",
        "-p", "com.spotify.music",
        "-c", "android.intent.category.LAUNCHER", "1"
    ])
    time.sleep(3)

    # 2. Tap Log In
    tap(device, 236, 780, pause=1)

    # 3. Tap Continue with email
    tap(device, 238, 538, pause=1)

    # 4. Escribir email
    tap(device, 169, 223, pause=0.5)
    clear_field(device)
    type_text(device, email)

    # 5. Tap Next
    tap(device, 247, 522, pause=1)

    # 6. Escribir password
    tap(device, 207, 389, pause=0.5)
    clear_field(device)
    type_text(device, pwd)

    # 7. Tap Log In final
    tap(device, 247, 522, pause=3)

    print(f"âœ… [{device}] Login intentado con {email}")

def get_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]  # omit header
    devices = [line.split()[0] for line in lines if "device" in line]
    return devices

def main():
    device_list = get_devices()
    account_list = accounts()

    if not device_list:
        print("âŒ No hay dispositivos conectados")
        return
    if not account_list:
        print("âŒ No hay cuentas disponibles")
        return

    threads = []
    for i, device in enumerate(device_list):
        if i >= len(account_list):
            print(f"âš ï¸ No hay suficientes cuentas para {device}")
            continue

        email, pwd = account_list[i]
        t = threading.Thread(target=login, args=(device, email, pwd))
        threads.append(t)
        t.start()

    for t in threads:
        t.join()

if __name__ == "__main__":
    main()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\config\accounts.txt
───────────────────────────────────────
betoddhot@mofu.be:ChristIsKing2025k!
wetustax@via.tokyo.jp:ChristIsKing2025k!
denhisgin@honeys.be:ChristIsKing2025k!
heyingage@instaddr.ch:ChristIsKing2025k!
seematmar@cream.pink:ChristIsKing2025k!
napanycow@cream.pink:ChristIsKing2025k!
youoat22@usako.net:ChristIsKing2025k!
henpaw280@fuwari.be:ChristIsKing2025k!
amrugbum@stayhome.li:ChristIsKing2025k!
pawagoha@addrin.uk:ChristIsKing2025k!



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\config\artists.txt
───────────────────────────────────────
https://open.spotify.com/artist/4iYKhDCuNXSSrli6AOH6cw?si=U3AzuXkVQ1uFgEVUFy908w
https://open.spotify.com/artist/3o9yGahQLPpDLMI6dABpIr?si=f8sTAXSOSoOf-DHKLlKGUQ
https://open.spotify.com/artist/77slAN1w8sLCiCGwiZmNEF?si=qZJ3vMa6TKGYJM_VhpXSLA
https://open.spotify.com/artist/7A2DajzYPQX61nWxGqZx8J?si=QSu1LhWuRS6Dthp58-ggFA
https://open.spotify.com/artist/47wHz4LqcznFnKtMKzycK9?si=PUkRzJYUSQeOd-wguY7CgA
https://open.spotify.com/artist/0n41JlcxRaal6UxIXgOruw?si=vVaxZy3NQZiZVHzEZk0ytw
https://open.spotify.com/artist/5FODJKisUiQHQuylUd8tOy?si=Tk2fNDVvQOSIolBdnUpZ7A



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\config\playlists.txt
───────────────────────────────────────
https://open.spotify.com/playlist/3h6pIE4rE6z8OyxNMOqW8t?si=H8FB0OalRKGjeMjEXVgSJw
https://open.spotify.com/playlist/5XrvAtxjUWcbTNgLHc9hz2?si=8J8GtCkARCaiIlIOWzgMnA
https://open.spotify.com/playlist/1jNkvpdVy0DtpabdXexqLg?si=Jnx5VeI4RtSq-M6_Fy4OMg



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\config\proxy_pool.txt
───────────────────────────────────────
149.6.162.2:80:fpelmuks-1:0lrxoh26it92
149.14.243.178:80:fpelmuks-2:0lrxoh26it92
146.70.40.94:80:fpelmuks-3:0lrxoh26it92
149.6.162.10:80:fpelmuks-4:0lrxoh26it92
154.13.90.91:80:fpelmuks-5:0lrxoh26it92
107.155.114.18:80:fpelmuks-6:0lrxoh26it92
185.76.11.212:80:fpelmuks-7:0lrxoh26it92
107.155.114.2:80:fpelmuks-8:0lrxoh26it92
149.6.162.2:80:fpelmuks-9:0lrxoh26it92
149.14.243.178:80:fpelmuks-10:0lrxoh26it92
146.70.40.94:80:fpelmuks-11:0lrxoh26it92
149.6.162.10:80:fpelmuks-12:0lrxoh26it92
154.13.90.91:80:fpelmuks-13:0lrxoh26it92
107.155.114.18:80:fpelmuks-14:0lrxoh26it92
185.76.11.212:80:fpelmuks-15:0lrxoh26it92
107.155.114.2:80:fpelmuks-16:0lrxoh26it92
149.6.162.2:80:fpelmuks-17:0lrxoh26it92
149.14.243.178:80:fpelmuks-18:0lrxoh26it92
146.70.40.94:80:fpelmuks-19:0lrxoh26it92
149.6.162.10:80:fpelmuks-20:0lrxoh26it92
154.13.90.91:80:fpelmuks-21:0lrxoh26it92
107.155.114.18:80:fpelmuks-22:0lrxoh26it92
185.76.11.212:80:fpelmuks-23:0lrxoh26it92
107.155.114.2:80:fpelmuks-24:0lrxoh26it92
149.6.162.2:80:fpelmuks-25:0lrxoh26it92
149.14.243.178:80:fpelmuks-26:0lrxoh26it92
146.70.40.94:80:fpelmuks-27:0lrxoh26it92
149.6.162.10:80:fpelmuks-28:0lrxoh26it92
154.13.90.91:80:fpelmuks-29:0lrxoh26it92
107.155.114.18:80:fpelmuks-30:0lrxoh26it92
185.76.11.212:80:fpelmuks-31:0lrxoh26it92
107.155.114.2:80:fpelmuks-32:0lrxoh26it92
149.6.162.2:80:fpelmuks-33:0lrxoh26it92
149.14.243.178:80:fpelmuks-34:0lrxoh26it92
146.70.40.94:80:fpelmuks-35:0lrxoh26it92
149.6.162.10:80:fpelmuks-36:0lrxoh26it92
154.13.90.91:80:fpelmuks-37:0lrxoh26it92
107.155.114.18:80:fpelmuks-38:0lrxoh26it92
185.76.11.212:80:fpelmuks-39:0lrxoh26it92
107.155.114.2:80:fpelmuks-40:0lrxoh26it92
149.6.162.2:80:fpelmuks-41:0lrxoh26it92
149.14.243.178:80:fpelmuks-42:0lrxoh26it92
146.70.40.94:80:fpelmuks-43:0lrxoh26it92
149.6.162.10:80:fpelmuks-44:0lrxoh26it92
154.13.90.91:80:fpelmuks-45:0lrxoh26it92
107.155.114.18:80:fpelmuks-46:0lrxoh26it92
185.76.11.212:80:fpelmuks-47:0lrxoh26it92
107.155.114.2:80:fpelmuks-48:0lrxoh26it92
149.6.162.2:80:fpelmuks-49:0lrxoh26it92
149.14.243.178:80:fpelmuks-50:0lrxoh26it92
146.70.40.94:80:fpelmuks-51:0lrxoh26it92
149.6.162.10:80:fpelmuks-52:0lrxoh26it92
154.13.90.91:80:fpelmuks-53:0lrxoh26it92
107.155.114.18:80:fpelmuks-54:0lrxoh26it92
185.76.11.212:80:fpelmuks-55:0lrxoh26it92
107.155.114.2:80:fpelmuks-56:0lrxoh26it92
149.6.162.2:80:fpelmuks-57:0lrxoh26it92
149.14.243.178:80:fpelmuks-58:0lrxoh26it92
146.70.40.94:80:fpelmuks-59:0lrxoh26it92
149.6.162.10:80:fpelmuks-60:0lrxoh26it92
154.13.90.91:80:fpelmuks-61:0lrxoh26it92
107.155.114.18:80:fpelmuks-62:0lrxoh26it92
185.76.11.212:80:fpelmuks-63:0lrxoh26it92
107.155.114.2:80:fpelmuks-64:0lrxoh26it92
149.6.162.2:80:fpelmuks-65:0lrxoh26it92
149.14.243.178:80:fpelmuks-66:0lrxoh26it92
146.70.40.94:80:fpelmuks-67:0lrxoh26it92
149.6.162.10:80:fpelmuks-68:0lrxoh26it92
154.13.90.91:80:fpelmuks-69:0lrxoh26it92
107.155.114.18:80:fpelmuks-70:0lrxoh26it92
185.76.11.212:80:fpelmuks-71:0lrxoh26it92
107.155.114.2:80:fpelmuks-72:0lrxoh26it92
149.6.162.2:80:fpelmuks-73:0lrxoh26it92
149.14.243.178:80:fpelmuks-74:0lrxoh26it92
146.70.40.94:80:fpelmuks-75:0lrxoh26it92
149.6.162.10:80:fpelmuks-76:0lrxoh26it92
154.13.90.91:80:fpelmuks-77:0lrxoh26it92
107.155.114.18:80:fpelmuks-78:0lrxoh26it92
185.76.11.212:80:fpelmuks-79:0lrxoh26it92
107.155.114.2:80:fpelmuks-80:0lrxoh26it92
149.6.162.2:80:fpelmuks-81:0lrxoh26it92
149.14.243.178:80:fpelmuks-82:0lrxoh26it92
146.70.40.94:80:fpelmuks-83:0lrxoh26it92
149.6.162.10:80:fpelmuks-84:0lrxoh26it92
154.13.90.91:80:fpelmuks-85:0lrxoh26it92
107.155.114.18:80:fpelmuks-86:0lrxoh26it92
185.76.11.212:80:fpelmuks-87:0lrxoh26it92
107.155.114.2:80:fpelmuks-88:0lrxoh26it92
149.6.162.2:80:fpelmuks-89:0lrxoh26it92
149.14.243.178:80:fpelmuks-90:0lrxoh26it92
146.70.40.94:80:fpelmuks-91:0lrxoh26it92
149.6.162.10:80:fpelmuks-92:0lrxoh26it92
154.13.90.91:80:fpelmuks-93:0lrxoh26it92
107.155.114.18:80:fpelmuks-94:0lrxoh26it92
185.76.11.212:80:fpelmuks-95:0lrxoh26it92
107.155.114.2:80:fpelmuks-96:0lrxoh26it92
149.6.162.2:80:fpelmuks-97:0lrxoh26it92
149.14.243.178:80:fpelmuks-98:0lrxoh26it92
146.70.40.94:80:fpelmuks-99:0lrxoh26it92
149.6.162.10:80:fpelmuks-100:0lrxoh26it92
154.13.90.91:80:fpelmuks-101:0lrxoh26it92
107.155.114.18:80:fpelmuks-102:0lrxoh26it92
185.76.11.212:80:fpelmuks-103:0lrxoh26it92
107.155.114.2:80:fpelmuks-104:0lrxoh26it92
149.6.162.2:80:fpelmuks-105:0lrxoh26it92
149.14.243.178:80:fpelmuks-106:0lrxoh26it92
146.70.40.94:80:fpelmuks-107:0lrxoh26it92
149.6.162.10:80:fpelmuks-108:0lrxoh26it92
154.13.90.91:80:fpelmuks-109:0lrxoh26it92
107.155.114.18:80:fpelmuks-110:0lrxoh26it92
185.76.11.212:80:fpelmuks-111:0lrxoh26it92
107.155.114.2:80:fpelmuks-112:0lrxoh26it92
149.6.162.2:80:fpelmuks-113:0lrxoh26it92
149.14.243.178:80:fpelmuks-114:0lrxoh26it92
146.70.40.94:80:fpelmuks-115:0lrxoh26it92
149.6.162.10:80:fpelmuks-116:0lrxoh26it92
154.13.90.91:80:fpelmuks-117:0lrxoh26it92
107.155.114.18:80:fpelmuks-118:0lrxoh26it92
185.76.11.212:80:fpelmuks-119:0lrxoh26it92
107.155.114.2:80:fpelmuks-120:0lrxoh26it92
149.6.162.2:80:fpelmuks-121:0lrxoh26it92
149.14.243.178:80:fpelmuks-122:0lrxoh26it92
146.70.40.94:80:fpelmuks-123:0lrxoh26it92
149.6.162.10:80:fpelmuks-124:0lrxoh26it92
154.13.90.91:80:fpelmuks-125:0lrxoh26it92
107.155.114.18:80:fpelmuks-126:0lrxoh26it92
185.76.11.212:80:fpelmuks-127:0lrxoh26it92
107.155.114.2:80:fpelmuks-128:0lrxoh26it92
149.6.162.2:80:fpelmuks-129:0lrxoh26it92
149.14.243.178:80:fpelmuks-130:0lrxoh26it92
146.70.40.94:80:fpelmuks-131:0lrxoh26it92
149.6.162.10:80:fpelmuks-132:0lrxoh26it92
154.13.90.91:80:fpelmuks-133:0lrxoh26it92
107.155.114.18:80:fpelmuks-134:0lrxoh26it92
185.76.11.212:80:fpelmuks-135:0lrxoh26it92
107.155.114.2:80:fpelmuks-136:0lrxoh26it92
149.6.162.2:80:fpelmuks-137:0lrxoh26it92
149.14.243.178:80:fpelmuks-138:0lrxoh26it92
146.70.40.94:80:fpelmuks-139:0lrxoh26it92
149.6.162.10:80:fpelmuks-140:0lrxoh26it92
154.13.90.91:80:fpelmuks-141:0lrxoh26it92
107.155.114.18:80:fpelmuks-142:0lrxoh26it92
185.76.11.212:80:fpelmuks-143:0lrxoh26it92
107.155.114.2:80:fpelmuks-144:0lrxoh26it92
149.6.162.2:80:fpelmuks-145:0lrxoh26it92
149.14.243.178:80:fpelmuks-146:0lrxoh26it92
146.70.40.94:80:fpelmuks-147:0lrxoh26it92
149.6.162.10:80:fpelmuks-148:0lrxoh26it92
154.13.90.91:80:fpelmuks-149:0lrxoh26it92
107.155.114.18:80:fpelmuks-150:0lrxoh26it92
185.76.11.212:80:fpelmuks-151:0lrxoh26it92
107.155.114.2:80:fpelmuks-152:0lrxoh26it92
149.6.162.2:80:fpelmuks-153:0lrxoh26it92
149.14.243.178:80:fpelmuks-154:0lrxoh26it92
146.70.40.94:80:fpelmuks-155:0lrxoh26it92
149.6.162.10:80:fpelmuks-156:0lrxoh26it92
154.13.90.91:80:fpelmuks-157:0lrxoh26it92
107.155.114.18:80:fpelmuks-158:0lrxoh26it92
185.76.11.212:80:fpelmuks-159:0lrxoh26it92
107.155.114.2:80:fpelmuks-160:0lrxoh26it92
149.6.162.2:80:fpelmuks-161:0lrxoh26it92
149.14.243.178:80:fpelmuks-162:0lrxoh26it92
146.70.40.94:80:fpelmuks-163:0lrxoh26it92
149.6.162.10:80:fpelmuks-164:0lrxoh26it92
154.13.90.91:80:fpelmuks-165:0lrxoh26it92
107.155.114.18:80:fpelmuks-166:0lrxoh26it92
185.76.11.212:80:fpelmuks-167:0lrxoh26it92
107.155.114.2:80:fpelmuks-168:0lrxoh26it92
149.6.162.2:80:fpelmuks-169:0lrxoh26it92
149.14.243.178:80:fpelmuks-170:0lrxoh26it92
146.70.40.94:80:fpelmuks-171:0lrxoh26it92
149.6.162.10:80:fpelmuks-172:0lrxoh26it92
154.13.90.91:80:fpelmuks-173:0lrxoh26it92
107.155.114.18:80:fpelmuks-174:0lrxoh26it92
185.76.11.212:80:fpelmuks-175:0lrxoh26it92
107.155.114.2:80:fpelmuks-176:0lrxoh26it92
149.6.162.2:80:fpelmuks-177:0lrxoh26it92
149.14.243.178:80:fpelmuks-178:0lrxoh26it92
146.70.40.94:80:fpelmuks-179:0lrxoh26it92
149.6.162.10:80:fpelmuks-180:0lrxoh26it92
154.13.90.91:80:fpelmuks-181:0lrxoh26it92
107.155.114.18:80:fpelmuks-182:0lrxoh26it92
185.76.11.212:80:fpelmuks-183:0lrxoh26it92
107.155.114.2:80:fpelmuks-184:0lrxoh26it92
149.6.162.2:80:fpelmuks-185:0lrxoh26it92
149.14.243.178:80:fpelmuks-186:0lrxoh26it92
146.70.40.94:80:fpelmuks-187:0lrxoh26it92
149.6.162.10:80:fpelmuks-188:0lrxoh26it92
154.13.90.91:80:fpelmuks-189:0lrxoh26it92
107.155.114.18:80:fpelmuks-190:0lrxoh26it92
185.76.11.212:80:fpelmuks-191:0lrxoh26it92
107.155.114.2:80:fpelmuks-192:0lrxoh26it92
149.6.162.2:80:fpelmuks-193:0lrxoh26it92
149.14.243.178:80:fpelmuks-194:0lrxoh26it92
146.70.40.94:80:fpelmuks-195:0lrxoh26it92
149.6.162.10:80:fpelmuks-196:0lrxoh26it92
154.13.90.91:80:fpelmuks-197:0lrxoh26it92
107.155.114.18:80:fpelmuks-198:0lrxoh26it92
185.76.11.212:80:fpelmuks-199:0lrxoh26it92
107.155.114.2:80:fpelmuks-200:0lrxoh26it92
149.6.162.2:80:fpelmuks-201:0lrxoh26it92
149.14.243.178:80:fpelmuks-202:0lrxoh26it92
146.70.40.94:80:fpelmuks-203:0lrxoh26it92
149.6.162.10:80:fpelmuks-204:0lrxoh26it92
154.13.90.91:80:fpelmuks-205:0lrxoh26it92
107.155.114.18:80:fpelmuks-206:0lrxoh26it92
185.76.11.212:80:fpelmuks-207:0lrxoh26it92
107.155.114.2:80:fpelmuks-208:0lrxoh26it92
149.6.162.2:80:fpelmuks-209:0lrxoh26it92
149.14.243.178:80:fpelmuks-210:0lrxoh26it92
146.70.40.94:80:fpelmuks-211:0lrxoh26it92
149.6.162.10:80:fpelmuks-212:0lrxoh26it92
154.13.90.91:80:fpelmuks-213:0lrxoh26it92
107.155.114.18:80:fpelmuks-214:0lrxoh26it92
185.76.11.212:80:fpelmuks-215:0lrxoh26it92
107.155.114.2:80:fpelmuks-216:0lrxoh26it92
149.6.162.2:80:fpelmuks-217:0lrxoh26it92
149.14.243.178:80:fpelmuks-218:0lrxoh26it92
146.70.40.94:80:fpelmuks-219:0lrxoh26it92
149.6.162.10:80:fpelmuks-220:0lrxoh26it92
154.13.90.91:80:fpelmuks-221:0lrxoh26it92
107.155.114.18:80:fpelmuks-222:0lrxoh26it92
185.76.11.212:80:fpelmuks-223:0lrxoh26it92
107.155.114.2:80:fpelmuks-224:0lrxoh26it92
149.6.162.2:80:fpelmuks-225:0lrxoh26it92
149.14.243.178:80:fpelmuks-226:0lrxoh26it92
146.70.40.94:80:fpelmuks-227:0lrxoh26it92
149.6.162.10:80:fpelmuks-228:0lrxoh26it92
154.13.90.91:80:fpelmuks-229:0lrxoh26it92
107.155.114.18:80:fpelmuks-230:0lrxoh26it92
185.76.11.212:80:fpelmuks-231:0lrxoh26it92
107.155.114.2:80:fpelmuks-232:0lrxoh26it92
149.6.162.2:80:fpelmuks-233:0lrxoh26it92
149.14.243.178:80:fpelmuks-234:0lrxoh26it92
146.70.40.94:80:fpelmuks-235:0lrxoh26it92
149.6.162.10:80:fpelmuks-236:0lrxoh26it92
154.13.90.91:80:fpelmuks-237:0lrxoh26it92
107.155.114.18:80:fpelmuks-238:0lrxoh26it92
185.76.11.212:80:fpelmuks-239:0lrxoh26it92
107.155.114.2:80:fpelmuks-240:0lrxoh26it92
149.6.162.2:80:fpelmuks-241:0lrxoh26it92
149.14.243.178:80:fpelmuks-242:0lrxoh26it92
146.70.40.94:80:fpelmuks-243:0lrxoh26it92
149.6.162.10:80:fpelmuks-244:0lrxoh26it92
154.13.90.91:80:fpelmuks-245:0lrxoh26it92
107.155.114.18:80:fpelmuks-246:0lrxoh26it92
185.76.11.212:80:fpelmuks-247:0lrxoh26it92
107.155.114.2:80:fpelmuks-248:0lrxoh26it92
149.6.162.2:80:fpelmuks-249:0lrxoh26it92
149.14.243.178:80:fpelmuks-250:0lrxoh26it92



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\config\tracks.txt
───────────────────────────────────────
https://open.spotify.com/track/56n5POxGEe6mw3MZrHwx9Q?si=b5a4661dae674cc8
https://open.spotify.com/track/0H6uEz7M1iJAV1tOoWFIuv?si=7a8bc2e25d37488c
https://open.spotify.com/track/5jVyl83rotcudoq5kRWtF1?si=34c40e8ca57f4949
https://open.spotify.com/track/7Jljj8PljcJqdYmZKRmAqa?si=ce8b40bb8f1c4a6c
https://open.spotify.com/track/2cKGcpQwQJrN2Q7ptQgNcQ?si=7f68fabf73ed4016
https://open.spotify.com/track/63wJgneSsPFciSc2cJEUjx?si=a7809f965b144c77
https://open.spotify.com/track/3dXgIDgfDHDrj7HodhftIZ?si=8f0972445d9a43bd
https://open.spotify.com/track/7Cn1w1bPLly5WlqYf30RNi?si=a28ee0841ed54d05
https://open.spotify.com/track/5AMKzmuHZhC2kMil554zrA?si=4695493569f94a02
https://open.spotify.com/track/71z4HT1pIlSTtm47u32Ob6?si=faca2e2f2c2a4dfd
https://open.spotify.com/track/7kgci0jCra6NX4PPK4P9f6?si=bc4a340a0e4247f7
https://open.spotify.com/track/2Ltbaup04b0VtVCQv8nQUD?si=4ac66c9df6904be4
https://open.spotify.com/track/47fvMRDX1t1ataekXxgB0w?si=d2f181da63ed436c
https://open.spotify.com/track/1zGEZlxV2VKbHgmi4qrcmE?si=c11be701bf354abc
https://open.spotify.com/track/7gDtBlIWbTQAt4zd0ryePj?si=ad561655983e4181
https://open.spotify.com/track/0PJDvDz1oBFphZSwyWguED?si=759a3ab55c9546b7
https://open.spotify.com/track/3WR5RD9oUZCP77oEAqOYIY?si=d9bc49699fbb4155
https://open.spotify.com/track/2XHYUmHTvsSZktyXuxONlv?si=1289865453d6482d
https://open.spotify.com/track/6chauqQCRTlLer9WsgjBiL?si=795e2a80c1a2404f
https://open.spotify.com/track/3oCINS5vEBpRwRzoXfapY8?si=649a132eaf094f0b
https://open.spotify.com/track/7DE3WEmHv9GE9GGUAj6t7x?si=e259f7f0086848c4
https://open.spotify.com/track/1Rqd2ACRacBSKYkzHrxoRI?si=2221934be3bb43aa
https://open.spotify.com/track/5qGcO6CCK5o0dRH1Hgud6l?si=fca009126da049ec
https://open.spotify.com/track/68bpWJrSemrbHr5NssH6Hu?si=ae807dd0561d47b3
https://open.spotify.com/track/4tCQ6QnjIYBKhEaPZMIaP2?si=6c64475d4ece4433
https://open.spotify.com/track/2mYXHkQ1zSDlEkAfnSSVlP?si=163395b60eda46b7
https://open.spotify.com/track/6KVyby3hnQoJ0LuWrNhP3V?si=87031187fd584405
https://open.spotify.com/track/74jLM7ARSVEOfiDBDMLvOz?si=dadf45a4b9f843da
https://open.spotify.com/track/5SARGGQQJcZI6nPuxl6aHn?si=f23209d736974edd
https://open.spotify.com/track/3v6vZXP5SsW5wP7kVgnWfM?si=b8bc7f1c913c4993
https://open.spotify.com/track/1bGeTnyiai5b0VwQYLTBJP?si=23d300865eb44ffb
https://open.spotify.com/track/5DniNb9Dtr0RItDSg3xbeL?si=1ce9b6255aea4b7c
https://open.spotify.com/track/77QnahFmpYVkEdl4wIOovy?si=7e2fe73d60b940c3
https://open.spotify.com/track/2kHW9OgVGbPMvMrhhi54aK?si=a250bf53a18741c3
https://open.spotify.com/track/6we6t2VY7EXW3MqTSsXWTA?si=f85e8bd7d6844ab4
https://open.spotify.com/track/5QAme8wugnxgTfxqTz7Fk4?si=3f2aac2176dc4932
https://open.spotify.com/track/3bfsoagksB1mvwxLI9TlOJ?si=6c5c12b5a5ad4bae
https://open.spotify.com/track/4s5QIRwlHiNtZ169jjjAeF?si=28da8aca56074864
https://open.spotify.com/track/4s5QIRwlHiNtZ169jjjAeF?si=28da8aca56074864
https://open.spotify.com/track/0YJMsyFNk5eN8ZK6eZ93Tx?si=9021bed06cd840fd
https://open.spotify.com/track/3bsIvoNoiqOJV7FkiEhqIs?si=c4c96203a6f74604
https://open.spotify.com/track/3M3BJnMb84RqCECkk2EQYJ?si=8968cf1e00e049cb
https://open.spotify.com/track/63rnElK5GuclQYkvjCiXtl?si=f8788d2ef3594784
https://open.spotify.com/track/2Jeb3j7ZsvXo2Lq3gnmKNE?si=89db46f6dcee4308
https://open.spotify.com/track/4g6QGuahrmyWxXYTROAOvC?si=052be34632d94e1c
https://open.spotify.com/track/73SbD6nwYYFitZ3yH6Ftcx?si=828725384b254f15
https://open.spotify.com/track/6oGQjWJ2UL001JJBqrPspj?si=b65b22ea4c0a4bf7
https://open.spotify.com/track/5gMqG3PPY6mOolb8J2x7yT?si=88fb7c4b539b4b6a
https://open.spotify.com/track/0ieUN2FRUh9GbuUMLR3acv?si=63441d6f38934caa
https://open.spotify.com/track/7kot4gkOPbVsJXX037Z31u?si=e896dca081c046d3
https://open.spotify.com/track/1x02KP7RaVqE1ayeCabkMd?si=63f642e286e34f1c
https://open.spotify.com/track/6Y0w8CCEPdWEVjfocrSc2W?si=afeb0531249a4ce2
https://open.spotify.com/track/0i7tQVbeBL2ELLLP6cZE72?si=aa51f8698b484b24
https://open.spotify.com/track/6ZLSD0ifcRUFTdCQcFCV60?si=a3429f8f2cc54079
https://open.spotify.com/track/4DeakKpNTrWy0AX4Z2IGlj?si=35b7803e152d48ad
https://open.spotify.com/track/0InF5ggbRknQl84fAdBW06?si=9d7eceffc9fb4a92
https://open.spotify.com/track/6c8FuH8aNs9kyQabLxuMwY?si=aef8aa6487eb4b8a
https://open.spotify.com/track/6yWEADAUH6nwiAnuOZ32Tb?si=d0ca135d3e504a42
https://open.spotify.com/track/66SqWUZ9Sm0EA5518UfZLE?si=60754d5c823640ba
https://open.spotify.com/track/2T1sdJJ6cnDQiu67OhLyx0?si=3aa86178300b477a
https://open.spotify.com/track/5FICIdefuZwI3RwUbANRvK?si=0d50690b581f490a
https://open.spotify.com/track/3Mb486B1srNY9yIfDtYlFg?si=542ff43e8a01437f
https://open.spotify.com/track/3LNc96mDbm2y3dLXzGmtxp?si=98c3085e3f4e4536
https://open.spotify.com/track/26B5P9UdrIFs6hWLEbt0el?si=acdfa3d025444cfd
https://open.spotify.com/track/7HWGXBDPYyz0c496R4uDFm?si=39ddcd5727c7408f
https://open.spotify.com/track/30w7HUqum1oua9qWPB5EDZ?si=1b4a88a5ebf64888
https://open.spotify.com/track/5MOphoHNoKEoGhj1d6DhCk?si=1091a62edfb14c99
https://open.spotify.com/track/4sgLRmHnr3QO0xF0H0zKui?si=9f39308b52b24e6f
https://open.spotify.com/track/35wWTFOD2011nPh15xyo7e?si=e931b3c974994e45
https://open.spotify.com/track/7grqqA3gas01kw4hzlcwXA?si=e5b567b184304314
https://open.spotify.com/track/5or9LcgUYTjivDDoc7oTV9?si=cbe4827b93674048
https://open.spotify.com/track/1ck053GuqqSfbR9oFfvZdV?si=2ee3e0585be44782
https://open.spotify.com/track/4s097BVg9TQhmCkqrnZYG2?si=7fbb5ef27032407e
https://open.spotify.com/track/42glwByrmk3te4skD2ilGd?si=2c6b84ae57764eeb
https://open.spotify.com/track/33AWHdHIJDkd4PI1BE4MxF?si=6f5507328d774dab
https://open.spotify.com/track/0wob1e4xmHp1R2SXNLnxnT?si=7105fe3ab5874c34
https://open.spotify.com/track/2GQqmzXroEb5sOeb5enOrH?si=053540bb328f48f1
https://open.spotify.com/track/43NTQLEvpsR9uqb8mvPq48?si=3cd25fec512846fd
https://open.spotify.com/track/2fraSZfE7AgDZkfBt32FjB?si=3a94a3acb8a54e74
https://open.spotify.com/track/7eEA2LpiQWtrcnimS2hCBJ?si=fd8515f7bf334a95
https://open.spotify.com/track/7cyb9fUxjXeUIjuS7y1mOU?si=d7740fb8b7924b75
https://open.spotify.com/track/66eDY7EiNvsfYwmDnjeytO?si=73b56eb7297b4915
https://open.spotify.com/track/0g890lgQN05j7jXRz3gfML?si=15c6f5bdf6ca4f8f
https://open.spotify.com/track/5pmougcxnTaZueJLRx5caj?si=536e66a2722048eb
https://open.spotify.com/track/5dKxPpOOlXGpN5jKAWQsKj?si=f8fea69a37c74e42
https://open.spotify.com/track/4CQBKppd7bePKcPPxugYP5?si=2f5f0958db484402
https://open.spotify.com/track/2Hwt857AlteZLeYzsBElxJ?si=28ed13313b964b60
https://open.spotify.com/track/0jr5dGIYbo42gEMNa7FPoH?si=1a35f7f20d4e4851
https://open.spotify.com/track/7mkCNwwfUlaUqe7a1og1hu?si=ee8c2fdc08834a8c
https://open.spotify.com/track/3gQj4pQbHkzFaTNBAc7GoR?si=2cb550454a6a4b32
https://open.spotify.com/track/06ZSfcXsyqm8qw1kFxQrrV?si=367b0c354a934ba0
https://open.spotify.com/track/6EPT8lWSHS9QY6S3KDyj8P?si=1b9ee574b990495f
https://open.spotify.com/track/1FCz670pJ73G2nWmydkLw2?si=0d85fb67339244dd
https://open.spotify.com/track/4WY3wLorn2QrcoLXBNpNib?si=b2e7c877b4d249d1
https://open.spotify.com/track/4PQDRTRxgb68ao1QZYGIpU?si=5282d47e9fd548cc
https://open.spotify.com/track/2f4trKAHr9pgQF51fpprYf?si=4ec152ce63544dd6
https://open.spotify.com/track/5wXt2nPhM5hN97tFE81ycr?si=ee469032c158461c
https://open.spotify.com/track/737EtW17MbnK6vtrNdqXPE?si=776b9da5f5dc4a2f
https://open.spotify.com/track/6VXwwWfz1IYRyDbJtJurI6?si=52adb63b9c304514
https://open.spotify.com/track/4l5KJpWbfGeqAyej5mKuuT?si=5abc28d747b04218
https://open.spotify.com/track/31PLq481Xd9HqFlZWySn1T?si=47f2b661313e4c69
https://open.spotify.com/track/4qHOYIBnr7eeWrmc94Ev4w?si=b577717278df430e
https://open.spotify.com/track/1U8b6lUsUCugMe8WDw7N2V?si=498753a00ce045e2
https://open.spotify.com/track/6aY1j5Nvbe8TnzrgJpVphd?si=b08d6bfff28f4694
https://open.spotify.com/track/6Jmal8Eur6b1qCqqlGn0oF?si=522f399a76ac4a59
https://open.spotify.com/track/2FAslAIJWS7FyRWSBfTAub?si=1c748d229a3b4d2c
https://open.spotify.com/track/2a0oQ6iFKFf4F9sKFhyZCq?si=dcde6c6b4f0f466e
https://open.spotify.com/track/6wBW9QrNcV6C2BipfBnEq2?si=ffcaac25ded34457
https://open.spotify.com/track/5COlf8w89sc1sN0RY7t2lo?si=7c36375c9b7446e7
https://open.spotify.com/track/64e9U3DonDMtdEZP4TNss2?si=75fccc7fd07f479a
https://open.spotify.com/track/3jXxejshIhhAP7mg9mNIfB?si=044d5bb7179e4119
https://open.spotify.com/track/3ztiJHnOo2ntf1qrRWCWBZ?si=531df0d5687a419a
https://open.spotify.com/track/0F5AY6M9pIoN03jPEuo5ts?si=8563d4590c844b6c
https://open.spotify.com/track/7ySqoR0cnCkntmp7UmyfYZ?si=00c3bc6dd6184f5c
https://open.spotify.com/track/5hMqtGijnPinuWkkxrSkl3?si=02da37c9214e478f
https://open.spotify.com/track/5QuGD4wmi7hCjv2JDM0v5f?si=bc54d26e32d54e04
https://open.spotify.com/track/6yTIGrJ5FwCmxHSJ8pxg4c?si=84acb0bee1b94882
https://open.spotify.com/track/6XK4Gjr7y9CDxJ4GXBpEKa?si=8fce5cdcc1e54315
https://open.spotify.com/track/3XfnpskwSDhZlonjEhyNfw?si=e9ea9266e3584eac
https://open.spotify.com/track/4W9S87QtnKKLnKOCaPBl0a?si=1aa961979d9e4fc6
https://open.spotify.com/track/6KmUHNl4PHNuCxYAu1yijA?si=a087ac66ecd74289
https://open.spotify.com/track/2SRO0cHnlRFZ40RIYiMPVH?si=6e171f14143949c6
https://open.spotify.com/track/7i79hzFEP1Qy3nSe4vBVlD?si=3dd75cd01fc04e99
https://open.spotify.com/track/45GICU9IIp2tMPStPcCzRK?si=6926a20058f94d6f
https://open.spotify.com/track/2HeweoK8r3UMBhPVOz3zDv?si=b74b7234941b43fa
https://open.spotify.com/track/4pPzwHas9qiGi1r84M3EGj?si=2b336ae2595040cb
https://open.spotify.com/track/6gIIhxRm4DhkkJO3iS44xr?si=ba8d59d9d38b44f3
https://open.spotify.com/track/1ERrqbv1lzUyQpCHTckOwP?si=386d01a57e4b4b07
https://open.spotify.com/track/0f1q2Pa2zZzyRvCU4UThzS?si=c8ffc75cde624284
https://open.spotify.com/track/3VEti6L1PE2EzompzQsNZ9?si=fe5cc27213e446bc
https://open.spotify.com/track/50EyR7YmHXuTZGbHxMm064?si=5e0145297e204f3e
https://open.spotify.com/track/1goCN5yP6nNhn5sprcCMjC?si=d06174b3c9b64404
https://open.spotify.com/track/2ZQvZMj1M7V4ZSsn7G1s59?si=cd8983e9ae474854
https://open.spotify.com/track/7r8zyOkJPByv4Z2taWQJOO?si=2cc5cd342501464b
https://open.spotify.com/track/2Bh8zkphL3WXfay99qTUVI?si=424bfb88481848f1
https://open.spotify.com/track/0SxGrLPRy6JxE9HtogWgVs?si=b837ddb3540945a2
https://open.spotify.com/track/7zPzQhFnWUaeBqEZEj4uqI?si=28c741bf46ec4bb7
https://open.spotify.com/track/7b42dLrWVexmzce80HCgXx?si=d6d45d24ebbb4fa0
https://open.spotify.com/track/1JumThE4gWEdKp778Q1xRo?si=fb4dc1a5daee4c6d
https://open.spotify.com/track/77QxsdGyRN4wpeZ35MFtLW?si=397cffc8ff324d92
https://open.spotify.com/track/43WNuCxGH0aJ9k40tNEL7u?si=b026927513e24ce1
https://open.spotify.com/track/0o5uW9nUettRcW0JOjyCwu?si=90c33e8e5fce40c2
https://open.spotify.com/track/7lvSuBTjyRz1aciG7NFrcJ?si=5540d5c234184260
https://open.spotify.com/track/3T71M7L4nSpSSfXpWPyRvl?si=dec4fa1d9ccc4459
https://open.spotify.com/track/1ksMUmkBb5pCpgmVTCPJzK?si=fcd611cd725f4e6b
https://open.spotify.com/track/02FcX1nvlk29RY20y5FB4C?si=7038ae7764e34739
https://open.spotify.com/track/3iD0a9tpL604kNN4BXvjOj?si=793ebc7876364c1b
https://open.spotify.com/track/74XC2E5nQeBCg29WyHzcpi?si=6f836c5416d842b2
https://open.spotify.com/track/7vv04rYaILTgPnKmNEb8wO?si=84441a3595164133
https://open.spotify.com/track/2041toKd8XoU1dxjW1aBzb?si=63d794bbd5114ccb
https://open.spotify.com/track/3PcZgpGscGOrMxyTCWcxlw?si=3ad3e5235a7d4531
https://open.spotify.com/track/1Y7G0YR3wQEqpo3k9wdNBS?si=d762c5c2e94d45c8
https://open.spotify.com/track/1WlmDiy18ZvXJutrTgI4fF?si=82e0c5ab1a0d46ca
https://open.spotify.com/track/6SCzfYTnwjfi46mP60BYLX?si=2f914e32811a4c63
https://open.spotify.com/track/1fK6rX7V7xmhn6ismkonRG?si=4fd397de9fff4e3e
https://open.spotify.com/track/5pGyOZXMGouVkvcc2KKnkq?si=4fbea5919fba4510
https://open.spotify.com/track/6YoI5B7Ufi2QnhhBSsGPkM?si=ce8eea8c6c534f7a
https://open.spotify.com/track/6E7w7OT5uLffRah11oPuq0?si=048081b10d914ab0
https://open.spotify.com/track/1StUTBd2b4ZOmVxlAUoW2P?si=92095ee174cf4f96
https://open.spotify.com/track/3LzfZMcI6GKmqxsP7AxBZ9?si=72e5d0d42fec4de1
https://open.spotify.com/track/2tdqVAGOZGg27cZKAXxUny?si=fe36149c1e0446ce
https://open.spotify.com/track/1uDHCxIyapOyf5HJY5ltTd?si=3ead8621ab0840f3
https://open.spotify.com/track/6swvZmgs64s3lVEUtqTwRX?si=ab028a4aaeb74472
https://open.spotify.com/track/2byabb9Jr9Zxdp9WQuPj23?si=ea7be5e7b25644d1
https://open.spotify.com/track/2XHYUmHTvsSZktyXuxONlv?si=1255ea9b363f44b8
https://open.spotify.com/track/318ZdtPGDsfTrhJclXvgjY?si=716ec0527715405f
https://open.spotify.com/track/6jLyOIDfTgTrfVbFz8QORv?si=d8a7d8036d2e41f8
https://open.spotify.com/track/6euXG4bG4NSdF9t4KA5ZLV?si=cee5a7848ff44f40
https://open.spotify.com/track/38sgZYb8TS0xopIvYkTK5T?si=21fc3cea0f794edb
https://open.spotify.com/track/71Urz9JmYoaedvlo76DHY7?si=12838fe90f0f44da
https://open.spotify.com/track/1VRzG9fgK6kPljy3faYJ21?si=020dd609011448f3
https://open.spotify.com/track/1KMJotcWWPl6MzBtdnoSAe?si=3b8a980ff40e4c37
https://open.spotify.com/track/3FBwOAG677ASqjipGNQyc1?si=9e3de0db2fe94038
https://open.spotify.com/track/3dc03MNEpHKJesp8pBsaK5?si=ac0de1a2a74c423a
https://open.spotify.com/track/7HRKVX3cVuFsynu8Oj8fat?si=ddcc80f7d5b84928



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data\artists.txt
───────────────────────────────────────
https://open.spotify.com/artist/4iYKhDCuNXSSrli6AOH6cw?si=U3AzuXkVQ1uFgEVUFy908w
https://open.spotify.com/artist/3o9yGahQLPpDLMI6dABpIr?si=f8sTAXSOSoOf-DHKLlKGUQ
https://open.spotify.com/artist/77slAN1w8sLCiCGwiZmNEF?si=qZJ3vMa6TKGYJM_VhpXSLA
https://open.spotify.com/artist/7A2DajzYPQX61nWxGqZx8J?si=QSu1LhWuRS6Dthp58-ggFA
https://open.spotify.com/artist/47wHz4LqcznFnKtMKzycK9?si=PUkRzJYUSQeOd-wguY7CgA
https://open.spotify.com/artist/0n41JlcxRaal6UxIXgOruw?si=vVaxZy3NQZiZVHzEZk0ytw
https://open.spotify.com/artist/5FODJKisUiQHQuylUd8tOy?si=Tk2fNDVvQOSIolBdnUpZ7A



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data\playlists.txt
───────────────────────────────────────
https://open.spotify.com/playlist/3h6pIE4rE6z8OyxNMOqW8t?si=H8FB0OalRKGjeMjEXVgSJw
https://open.spotify.com/playlist/5XrvAtxjUWcbTNgLHc9hz2?si=8J8GtCkARCaiIlIOWzgMnA
https://open.spotify.com/playlist/1jNkvpdVy0DtpabdXexqLg?si=Jnx5VeI4RtSq-M6_Fy4OMg



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data\proxy_pool.txt
───────────────────────────────────────
149.6.162.2:80:fpelmuks-1:0lrxoh26it92
149.14.243.178:80:fpelmuks-2:0lrxoh26it92
146.70.40.94:80:fpelmuks-3:0lrxoh26it92
149.6.162.10:80:fpelmuks-4:0lrxoh26it92
154.13.90.91:80:fpelmuks-5:0lrxoh26it92
107.155.114.18:80:fpelmuks-6:0lrxoh26it92
185.76.11.212:80:fpelmuks-7:0lrxoh26it92
107.155.114.2:80:fpelmuks-8:0lrxoh26it92
149.6.162.2:80:fpelmuks-9:0lrxoh26it92
149.14.243.178:80:fpelmuks-10:0lrxoh26it92
146.70.40.94:80:fpelmuks-11:0lrxoh26it92
149.6.162.10:80:fpelmuks-12:0lrxoh26it92
154.13.90.91:80:fpelmuks-13:0lrxoh26it92
107.155.114.18:80:fpelmuks-14:0lrxoh26it92
185.76.11.212:80:fpelmuks-15:0lrxoh26it92
107.155.114.2:80:fpelmuks-16:0lrxoh26it92
149.6.162.2:80:fpelmuks-17:0lrxoh26it92
149.14.243.178:80:fpelmuks-18:0lrxoh26it92
146.70.40.94:80:fpelmuks-19:0lrxoh26it92
149.6.162.10:80:fpelmuks-20:0lrxoh26it92
154.13.90.91:80:fpelmuks-21:0lrxoh26it92
107.155.114.18:80:fpelmuks-22:0lrxoh26it92
185.76.11.212:80:fpelmuks-23:0lrxoh26it92
107.155.114.2:80:fpelmuks-24:0lrxoh26it92
149.6.162.2:80:fpelmuks-25:0lrxoh26it92
149.14.243.178:80:fpelmuks-26:0lrxoh26it92
146.70.40.94:80:fpelmuks-27:0lrxoh26it92
149.6.162.10:80:fpelmuks-28:0lrxoh26it92
154.13.90.91:80:fpelmuks-29:0lrxoh26it92
107.155.114.18:80:fpelmuks-30:0lrxoh26it92
185.76.11.212:80:fpelmuks-31:0lrxoh26it92
107.155.114.2:80:fpelmuks-32:0lrxoh26it92
149.6.162.2:80:fpelmuks-33:0lrxoh26it92
149.14.243.178:80:fpelmuks-34:0lrxoh26it92
146.70.40.94:80:fpelmuks-35:0lrxoh26it92
149.6.162.10:80:fpelmuks-36:0lrxoh26it92
154.13.90.91:80:fpelmuks-37:0lrxoh26it92
107.155.114.18:80:fpelmuks-38:0lrxoh26it92
185.76.11.212:80:fpelmuks-39:0lrxoh26it92
107.155.114.2:80:fpelmuks-40:0lrxoh26it92
149.6.162.2:80:fpelmuks-41:0lrxoh26it92
149.14.243.178:80:fpelmuks-42:0lrxoh26it92
146.70.40.94:80:fpelmuks-43:0lrxoh26it92
149.6.162.10:80:fpelmuks-44:0lrxoh26it92
154.13.90.91:80:fpelmuks-45:0lrxoh26it92
107.155.114.18:80:fpelmuks-46:0lrxoh26it92
185.76.11.212:80:fpelmuks-47:0lrxoh26it92
107.155.114.2:80:fpelmuks-48:0lrxoh26it92
149.6.162.2:80:fpelmuks-49:0lrxoh26it92
149.14.243.178:80:fpelmuks-50:0lrxoh26it92
146.70.40.94:80:fpelmuks-51:0lrxoh26it92
149.6.162.10:80:fpelmuks-52:0lrxoh26it92
154.13.90.91:80:fpelmuks-53:0lrxoh26it92
107.155.114.18:80:fpelmuks-54:0lrxoh26it92
185.76.11.212:80:fpelmuks-55:0lrxoh26it92
107.155.114.2:80:fpelmuks-56:0lrxoh26it92
149.6.162.2:80:fpelmuks-57:0lrxoh26it92
149.14.243.178:80:fpelmuks-58:0lrxoh26it92
146.70.40.94:80:fpelmuks-59:0lrxoh26it92
149.6.162.10:80:fpelmuks-60:0lrxoh26it92
154.13.90.91:80:fpelmuks-61:0lrxoh26it92
107.155.114.18:80:fpelmuks-62:0lrxoh26it92
185.76.11.212:80:fpelmuks-63:0lrxoh26it92
107.155.114.2:80:fpelmuks-64:0lrxoh26it92
149.6.162.2:80:fpelmuks-65:0lrxoh26it92
149.14.243.178:80:fpelmuks-66:0lrxoh26it92
146.70.40.94:80:fpelmuks-67:0lrxoh26it92
149.6.162.10:80:fpelmuks-68:0lrxoh26it92
154.13.90.91:80:fpelmuks-69:0lrxoh26it92
107.155.114.18:80:fpelmuks-70:0lrxoh26it92
185.76.11.212:80:fpelmuks-71:0lrxoh26it92
107.155.114.2:80:fpelmuks-72:0lrxoh26it92
149.6.162.2:80:fpelmuks-73:0lrxoh26it92
149.14.243.178:80:fpelmuks-74:0lrxoh26it92
146.70.40.94:80:fpelmuks-75:0lrxoh26it92
149.6.162.10:80:fpelmuks-76:0lrxoh26it92
154.13.90.91:80:fpelmuks-77:0lrxoh26it92
107.155.114.18:80:fpelmuks-78:0lrxoh26it92
185.76.11.212:80:fpelmuks-79:0lrxoh26it92
107.155.114.2:80:fpelmuks-80:0lrxoh26it92
149.6.162.2:80:fpelmuks-81:0lrxoh26it92
149.14.243.178:80:fpelmuks-82:0lrxoh26it92
146.70.40.94:80:fpelmuks-83:0lrxoh26it92
149.6.162.10:80:fpelmuks-84:0lrxoh26it92
154.13.90.91:80:fpelmuks-85:0lrxoh26it92
107.155.114.18:80:fpelmuks-86:0lrxoh26it92
185.76.11.212:80:fpelmuks-87:0lrxoh26it92
107.155.114.2:80:fpelmuks-88:0lrxoh26it92
149.6.162.2:80:fpelmuks-89:0lrxoh26it92
149.14.243.178:80:fpelmuks-90:0lrxoh26it92
146.70.40.94:80:fpelmuks-91:0lrxoh26it92
149.6.162.10:80:fpelmuks-92:0lrxoh26it92
154.13.90.91:80:fpelmuks-93:0lrxoh26it92
107.155.114.18:80:fpelmuks-94:0lrxoh26it92
185.76.11.212:80:fpelmuks-95:0lrxoh26it92
107.155.114.2:80:fpelmuks-96:0lrxoh26it92
149.6.162.2:80:fpelmuks-97:0lrxoh26it92
149.14.243.178:80:fpelmuks-98:0lrxoh26it92
146.70.40.94:80:fpelmuks-99:0lrxoh26it92
149.6.162.10:80:fpelmuks-100:0lrxoh26it92
154.13.90.91:80:fpelmuks-101:0lrxoh26it92
107.155.114.18:80:fpelmuks-102:0lrxoh26it92
185.76.11.212:80:fpelmuks-103:0lrxoh26it92
107.155.114.2:80:fpelmuks-104:0lrxoh26it92
149.6.162.2:80:fpelmuks-105:0lrxoh26it92
149.14.243.178:80:fpelmuks-106:0lrxoh26it92
146.70.40.94:80:fpelmuks-107:0lrxoh26it92
149.6.162.10:80:fpelmuks-108:0lrxoh26it92
154.13.90.91:80:fpelmuks-109:0lrxoh26it92
107.155.114.18:80:fpelmuks-110:0lrxoh26it92
185.76.11.212:80:fpelmuks-111:0lrxoh26it92
107.155.114.2:80:fpelmuks-112:0lrxoh26it92
149.6.162.2:80:fpelmuks-113:0lrxoh26it92
149.14.243.178:80:fpelmuks-114:0lrxoh26it92
146.70.40.94:80:fpelmuks-115:0lrxoh26it92
149.6.162.10:80:fpelmuks-116:0lrxoh26it92
154.13.90.91:80:fpelmuks-117:0lrxoh26it92
107.155.114.18:80:fpelmuks-118:0lrxoh26it92
185.76.11.212:80:fpelmuks-119:0lrxoh26it92
107.155.114.2:80:fpelmuks-120:0lrxoh26it92
149.6.162.2:80:fpelmuks-121:0lrxoh26it92
149.14.243.178:80:fpelmuks-122:0lrxoh26it92
146.70.40.94:80:fpelmuks-123:0lrxoh26it92
149.6.162.10:80:fpelmuks-124:0lrxoh26it92
154.13.90.91:80:fpelmuks-125:0lrxoh26it92
107.155.114.18:80:fpelmuks-126:0lrxoh26it92
185.76.11.212:80:fpelmuks-127:0lrxoh26it92
107.155.114.2:80:fpelmuks-128:0lrxoh26it92
149.6.162.2:80:fpelmuks-129:0lrxoh26it92
149.14.243.178:80:fpelmuks-130:0lrxoh26it92
146.70.40.94:80:fpelmuks-131:0lrxoh26it92
149.6.162.10:80:fpelmuks-132:0lrxoh26it92
154.13.90.91:80:fpelmuks-133:0lrxoh26it92
107.155.114.18:80:fpelmuks-134:0lrxoh26it92
185.76.11.212:80:fpelmuks-135:0lrxoh26it92
107.155.114.2:80:fpelmuks-136:0lrxoh26it92
149.6.162.2:80:fpelmuks-137:0lrxoh26it92
149.14.243.178:80:fpelmuks-138:0lrxoh26it92
146.70.40.94:80:fpelmuks-139:0lrxoh26it92
149.6.162.10:80:fpelmuks-140:0lrxoh26it92
154.13.90.91:80:fpelmuks-141:0lrxoh26it92
107.155.114.18:80:fpelmuks-142:0lrxoh26it92
185.76.11.212:80:fpelmuks-143:0lrxoh26it92
107.155.114.2:80:fpelmuks-144:0lrxoh26it92
149.6.162.2:80:fpelmuks-145:0lrxoh26it92
149.14.243.178:80:fpelmuks-146:0lrxoh26it92
146.70.40.94:80:fpelmuks-147:0lrxoh26it92
149.6.162.10:80:fpelmuks-148:0lrxoh26it92
154.13.90.91:80:fpelmuks-149:0lrxoh26it92
107.155.114.18:80:fpelmuks-150:0lrxoh26it92
185.76.11.212:80:fpelmuks-151:0lrxoh26it92
107.155.114.2:80:fpelmuks-152:0lrxoh26it92
149.6.162.2:80:fpelmuks-153:0lrxoh26it92
149.14.243.178:80:fpelmuks-154:0lrxoh26it92
146.70.40.94:80:fpelmuks-155:0lrxoh26it92
149.6.162.10:80:fpelmuks-156:0lrxoh26it92
154.13.90.91:80:fpelmuks-157:0lrxoh26it92
107.155.114.18:80:fpelmuks-158:0lrxoh26it92
185.76.11.212:80:fpelmuks-159:0lrxoh26it92
107.155.114.2:80:fpelmuks-160:0lrxoh26it92
149.6.162.2:80:fpelmuks-161:0lrxoh26it92
149.14.243.178:80:fpelmuks-162:0lrxoh26it92
146.70.40.94:80:fpelmuks-163:0lrxoh26it92
149.6.162.10:80:fpelmuks-164:0lrxoh26it92
154.13.90.91:80:fpelmuks-165:0lrxoh26it92
107.155.114.18:80:fpelmuks-166:0lrxoh26it92
185.76.11.212:80:fpelmuks-167:0lrxoh26it92
107.155.114.2:80:fpelmuks-168:0lrxoh26it92
149.6.162.2:80:fpelmuks-169:0lrxoh26it92
149.14.243.178:80:fpelmuks-170:0lrxoh26it92
146.70.40.94:80:fpelmuks-171:0lrxoh26it92
149.6.162.10:80:fpelmuks-172:0lrxoh26it92
154.13.90.91:80:fpelmuks-173:0lrxoh26it92
107.155.114.18:80:fpelmuks-174:0lrxoh26it92
185.76.11.212:80:fpelmuks-175:0lrxoh26it92
107.155.114.2:80:fpelmuks-176:0lrxoh26it92
149.6.162.2:80:fpelmuks-177:0lrxoh26it92
149.14.243.178:80:fpelmuks-178:0lrxoh26it92
146.70.40.94:80:fpelmuks-179:0lrxoh26it92
149.6.162.10:80:fpelmuks-180:0lrxoh26it92
154.13.90.91:80:fpelmuks-181:0lrxoh26it92
107.155.114.18:80:fpelmuks-182:0lrxoh26it92
185.76.11.212:80:fpelmuks-183:0lrxoh26it92
107.155.114.2:80:fpelmuks-184:0lrxoh26it92
149.6.162.2:80:fpelmuks-185:0lrxoh26it92
149.14.243.178:80:fpelmuks-186:0lrxoh26it92
146.70.40.94:80:fpelmuks-187:0lrxoh26it92
149.6.162.10:80:fpelmuks-188:0lrxoh26it92
154.13.90.91:80:fpelmuks-189:0lrxoh26it92
107.155.114.18:80:fpelmuks-190:0lrxoh26it92
185.76.11.212:80:fpelmuks-191:0lrxoh26it92
107.155.114.2:80:fpelmuks-192:0lrxoh26it92
149.6.162.2:80:fpelmuks-193:0lrxoh26it92
149.14.243.178:80:fpelmuks-194:0lrxoh26it92
146.70.40.94:80:fpelmuks-195:0lrxoh26it92
149.6.162.10:80:fpelmuks-196:0lrxoh26it92
154.13.90.91:80:fpelmuks-197:0lrxoh26it92
107.155.114.18:80:fpelmuks-198:0lrxoh26it92
185.76.11.212:80:fpelmuks-199:0lrxoh26it92
107.155.114.2:80:fpelmuks-200:0lrxoh26it92
149.6.162.2:80:fpelmuks-201:0lrxoh26it92
149.14.243.178:80:fpelmuks-202:0lrxoh26it92
146.70.40.94:80:fpelmuks-203:0lrxoh26it92
149.6.162.10:80:fpelmuks-204:0lrxoh26it92
154.13.90.91:80:fpelmuks-205:0lrxoh26it92
107.155.114.18:80:fpelmuks-206:0lrxoh26it92
185.76.11.212:80:fpelmuks-207:0lrxoh26it92
107.155.114.2:80:fpelmuks-208:0lrxoh26it92
149.6.162.2:80:fpelmuks-209:0lrxoh26it92
149.14.243.178:80:fpelmuks-210:0lrxoh26it92
146.70.40.94:80:fpelmuks-211:0lrxoh26it92
149.6.162.10:80:fpelmuks-212:0lrxoh26it92
154.13.90.91:80:fpelmuks-213:0lrxoh26it92
107.155.114.18:80:fpelmuks-214:0lrxoh26it92
185.76.11.212:80:fpelmuks-215:0lrxoh26it92
107.155.114.2:80:fpelmuks-216:0lrxoh26it92
149.6.162.2:80:fpelmuks-217:0lrxoh26it92
149.14.243.178:80:fpelmuks-218:0lrxoh26it92
146.70.40.94:80:fpelmuks-219:0lrxoh26it92
149.6.162.10:80:fpelmuks-220:0lrxoh26it92
154.13.90.91:80:fpelmuks-221:0lrxoh26it92
107.155.114.18:80:fpelmuks-222:0lrxoh26it92
185.76.11.212:80:fpelmuks-223:0lrxoh26it92
107.155.114.2:80:fpelmuks-224:0lrxoh26it92
149.6.162.2:80:fpelmuks-225:0lrxoh26it92
149.14.243.178:80:fpelmuks-226:0lrxoh26it92
146.70.40.94:80:fpelmuks-227:0lrxoh26it92
149.6.162.10:80:fpelmuks-228:0lrxoh26it92
154.13.90.91:80:fpelmuks-229:0lrxoh26it92
107.155.114.18:80:fpelmuks-230:0lrxoh26it92
185.76.11.212:80:fpelmuks-231:0lrxoh26it92
107.155.114.2:80:fpelmuks-232:0lrxoh26it92
149.6.162.2:80:fpelmuks-233:0lrxoh26it92
149.14.243.178:80:fpelmuks-234:0lrxoh26it92
146.70.40.94:80:fpelmuks-235:0lrxoh26it92
149.6.162.10:80:fpelmuks-236:0lrxoh26it92
154.13.90.91:80:fpelmuks-237:0lrxoh26it92
107.155.114.18:80:fpelmuks-238:0lrxoh26it92
185.76.11.212:80:fpelmuks-239:0lrxoh26it92
107.155.114.2:80:fpelmuks-240:0lrxoh26it92
149.6.162.2:80:fpelmuks-241:0lrxoh26it92
149.14.243.178:80:fpelmuks-242:0lrxoh26it92
146.70.40.94:80:fpelmuks-243:0lrxoh26it92
149.6.162.10:80:fpelmuks-244:0lrxoh26it92
154.13.90.91:80:fpelmuks-245:0lrxoh26it92
107.155.114.18:80:fpelmuks-246:0lrxoh26it92
185.76.11.212:80:fpelmuks-247:0lrxoh26it92
107.155.114.2:80:fpelmuks-248:0lrxoh26it92
149.6.162.2:80:fpelmuks-249:0lrxoh26it92
149.14.243.178:80:fpelmuks-250:0lrxoh26it92



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data\spotify_accounts.txt
───────────────────────────────────────
betoddhot@mofu.be:ChristIsKing2025k!
wetustax@via.tokyo.jp:ChristIsKing2025k!
denhisgin@honeys.be:ChristIsKing2025k!
heyingage@instaddr.ch:ChristIsKing2025k!
seematmar@cream.pink:ChristIsKing2025k!
napanycow@cream.pink:ChristIsKing2025k!
youoat22@usako.net:ChristIsKing2025k!
henpaw280@fuwari.be:ChristIsKing2025k!
amrugbum@stayhome.li:ChristIsKing2025k!
pawagoha@addrin.uk:ChristIsKing2025k!



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\data\tracks.txt
───────────────────────────────────────
https://open.spotify.com/track/56n5POxGEe6mw3MZrHwx9Q?si=b5a4661dae674cc8
https://open.spotify.com/track/0H6uEz7M1iJAV1tOoWFIuv?si=7a8bc2e25d37488c
https://open.spotify.com/track/5jVyl83rotcudoq5kRWtF1?si=34c40e8ca57f4949
https://open.spotify.com/track/7Jljj8PljcJqdYmZKRmAqa?si=ce8b40bb8f1c4a6c
https://open.spotify.com/track/2cKGcpQwQJrN2Q7ptQgNcQ?si=7f68fabf73ed4016
https://open.spotify.com/track/63wJgneSsPFciSc2cJEUjx?si=a7809f965b144c77
https://open.spotify.com/track/3dXgIDgfDHDrj7HodhftIZ?si=8f0972445d9a43bd
https://open.spotify.com/track/7Cn1w1bPLly5WlqYf30RNi?si=a28ee0841ed54d05
https://open.spotify.com/track/5AMKzmuHZhC2kMil554zrA?si=4695493569f94a02
https://open.spotify.com/track/71z4HT1pIlSTtm47u32Ob6?si=faca2e2f2c2a4dfd
https://open.spotify.com/track/7kgci0jCra6NX4PPK4P9f6?si=bc4a340a0e4247f7
https://open.spotify.com/track/2Ltbaup04b0VtVCQv8nQUD?si=4ac66c9df6904be4
https://open.spotify.com/track/47fvMRDX1t1ataekXxgB0w?si=d2f181da63ed436c
https://open.spotify.com/track/1zGEZlxV2VKbHgmi4qrcmE?si=c11be701bf354abc
https://open.spotify.com/track/7gDtBlIWbTQAt4zd0ryePj?si=ad561655983e4181
https://open.spotify.com/track/0PJDvDz1oBFphZSwyWguED?si=759a3ab55c9546b7
https://open.spotify.com/track/3WR5RD9oUZCP77oEAqOYIY?si=d9bc49699fbb4155
https://open.spotify.com/track/2XHYUmHTvsSZktyXuxONlv?si=1289865453d6482d
https://open.spotify.com/track/6chauqQCRTlLer9WsgjBiL?si=795e2a80c1a2404f
https://open.spotify.com/track/3oCINS5vEBpRwRzoXfapY8?si=649a132eaf094f0b
https://open.spotify.com/track/7DE3WEmHv9GE9GGUAj6t7x?si=e259f7f0086848c4
https://open.spotify.com/track/1Rqd2ACRacBSKYkzHrxoRI?si=2221934be3bb43aa
https://open.spotify.com/track/5qGcO6CCK5o0dRH1Hgud6l?si=fca009126da049ec
https://open.spotify.com/track/68bpWJrSemrbHr5NssH6Hu?si=ae807dd0561d47b3
https://open.spotify.com/track/4tCQ6QnjIYBKhEaPZMIaP2?si=6c64475d4ece4433
https://open.spotify.com/track/2mYXHkQ1zSDlEkAfnSSVlP?si=163395b60eda46b7
https://open.spotify.com/track/6KVyby3hnQoJ0LuWrNhP3V?si=87031187fd584405
https://open.spotify.com/track/74jLM7ARSVEOfiDBDMLvOz?si=dadf45a4b9f843da
https://open.spotify.com/track/5SARGGQQJcZI6nPuxl6aHn?si=f23209d736974edd
https://open.spotify.com/track/3v6vZXP5SsW5wP7kVgnWfM?si=b8bc7f1c913c4993
https://open.spotify.com/track/1bGeTnyiai5b0VwQYLTBJP?si=23d300865eb44ffb
https://open.spotify.com/track/5DniNb9Dtr0RItDSg3xbeL?si=1ce9b6255aea4b7c
https://open.spotify.com/track/77QnahFmpYVkEdl4wIOovy?si=7e2fe73d60b940c3
https://open.spotify.com/track/2kHW9OgVGbPMvMrhhi54aK?si=a250bf53a18741c3
https://open.spotify.com/track/6we6t2VY7EXW3MqTSsXWTA?si=f85e8bd7d6844ab4
https://open.spotify.com/track/5QAme8wugnxgTfxqTz7Fk4?si=3f2aac2176dc4932
https://open.spotify.com/track/3bfsoagksB1mvwxLI9TlOJ?si=6c5c12b5a5ad4bae
https://open.spotify.com/track/4s5QIRwlHiNtZ169jjjAeF?si=28da8aca56074864
https://open.spotify.com/track/4s5QIRwlHiNtZ169jjjAeF?si=28da8aca56074864
https://open.spotify.com/track/0YJMsyFNk5eN8ZK6eZ93Tx?si=9021bed06cd840fd
https://open.spotify.com/track/3bsIvoNoiqOJV7FkiEhqIs?si=c4c96203a6f74604
https://open.spotify.com/track/3M3BJnMb84RqCECkk2EQYJ?si=8968cf1e00e049cb
https://open.spotify.com/track/63rnElK5GuclQYkvjCiXtl?si=f8788d2ef3594784
https://open.spotify.com/track/2Jeb3j7ZsvXo2Lq3gnmKNE?si=89db46f6dcee4308
https://open.spotify.com/track/4g6QGuahrmyWxXYTROAOvC?si=052be34632d94e1c
https://open.spotify.com/track/73SbD6nwYYFitZ3yH6Ftcx?si=828725384b254f15
https://open.spotify.com/track/6oGQjWJ2UL001JJBqrPspj?si=b65b22ea4c0a4bf7
https://open.spotify.com/track/5gMqG3PPY6mOolb8J2x7yT?si=88fb7c4b539b4b6a
https://open.spotify.com/track/0ieUN2FRUh9GbuUMLR3acv?si=63441d6f38934caa
https://open.spotify.com/track/7kot4gkOPbVsJXX037Z31u?si=e896dca081c046d3
https://open.spotify.com/track/1x02KP7RaVqE1ayeCabkMd?si=63f642e286e34f1c
https://open.spotify.com/track/6Y0w8CCEPdWEVjfocrSc2W?si=afeb0531249a4ce2
https://open.spotify.com/track/0i7tQVbeBL2ELLLP6cZE72?si=aa51f8698b484b24
https://open.spotify.com/track/6ZLSD0ifcRUFTdCQcFCV60?si=a3429f8f2cc54079
https://open.spotify.com/track/4DeakKpNTrWy0AX4Z2IGlj?si=35b7803e152d48ad
https://open.spotify.com/track/0InF5ggbRknQl84fAdBW06?si=9d7eceffc9fb4a92
https://open.spotify.com/track/6c8FuH8aNs9kyQabLxuMwY?si=aef8aa6487eb4b8a
https://open.spotify.com/track/6yWEADAUH6nwiAnuOZ32Tb?si=d0ca135d3e504a42
https://open.spotify.com/track/66SqWUZ9Sm0EA5518UfZLE?si=60754d5c823640ba
https://open.spotify.com/track/2T1sdJJ6cnDQiu67OhLyx0?si=3aa86178300b477a
https://open.spotify.com/track/5FICIdefuZwI3RwUbANRvK?si=0d50690b581f490a
https://open.spotify.com/track/3Mb486B1srNY9yIfDtYlFg?si=542ff43e8a01437f
https://open.spotify.com/track/3LNc96mDbm2y3dLXzGmtxp?si=98c3085e3f4e4536
https://open.spotify.com/track/26B5P9UdrIFs6hWLEbt0el?si=acdfa3d025444cfd
https://open.spotify.com/track/7HWGXBDPYyz0c496R4uDFm?si=39ddcd5727c7408f
https://open.spotify.com/track/30w7HUqum1oua9qWPB5EDZ?si=1b4a88a5ebf64888
https://open.spotify.com/track/5MOphoHNoKEoGhj1d6DhCk?si=1091a62edfb14c99
https://open.spotify.com/track/4sgLRmHnr3QO0xF0H0zKui?si=9f39308b52b24e6f
https://open.spotify.com/track/35wWTFOD2011nPh15xyo7e?si=e931b3c974994e45
https://open.spotify.com/track/7grqqA3gas01kw4hzlcwXA?si=e5b567b184304314
https://open.spotify.com/track/5or9LcgUYTjivDDoc7oTV9?si=cbe4827b93674048
https://open.spotify.com/track/1ck053GuqqSfbR9oFfvZdV?si=2ee3e0585be44782
https://open.spotify.com/track/4s097BVg9TQhmCkqrnZYG2?si=7fbb5ef27032407e
https://open.spotify.com/track/42glwByrmk3te4skD2ilGd?si=2c6b84ae57764eeb
https://open.spotify.com/track/33AWHdHIJDkd4PI1BE4MxF?si=6f5507328d774dab
https://open.spotify.com/track/0wob1e4xmHp1R2SXNLnxnT?si=7105fe3ab5874c34
https://open.spotify.com/track/2GQqmzXroEb5sOeb5enOrH?si=053540bb328f48f1
https://open.spotify.com/track/43NTQLEvpsR9uqb8mvPq48?si=3cd25fec512846fd
https://open.spotify.com/track/2fraSZfE7AgDZkfBt32FjB?si=3a94a3acb8a54e74
https://open.spotify.com/track/7eEA2LpiQWtrcnimS2hCBJ?si=fd8515f7bf334a95
https://open.spotify.com/track/7cyb9fUxjXeUIjuS7y1mOU?si=d7740fb8b7924b75
https://open.spotify.com/track/66eDY7EiNvsfYwmDnjeytO?si=73b56eb7297b4915
https://open.spotify.com/track/0g890lgQN05j7jXRz3gfML?si=15c6f5bdf6ca4f8f
https://open.spotify.com/track/5pmougcxnTaZueJLRx5caj?si=536e66a2722048eb
https://open.spotify.com/track/5dKxPpOOlXGpN5jKAWQsKj?si=f8fea69a37c74e42
https://open.spotify.com/track/4CQBKppd7bePKcPPxugYP5?si=2f5f0958db484402
https://open.spotify.com/track/2Hwt857AlteZLeYzsBElxJ?si=28ed13313b964b60
https://open.spotify.com/track/0jr5dGIYbo42gEMNa7FPoH?si=1a35f7f20d4e4851
https://open.spotify.com/track/7mkCNwwfUlaUqe7a1og1hu?si=ee8c2fdc08834a8c
https://open.spotify.com/track/3gQj4pQbHkzFaTNBAc7GoR?si=2cb550454a6a4b32
https://open.spotify.com/track/06ZSfcXsyqm8qw1kFxQrrV?si=367b0c354a934ba0
https://open.spotify.com/track/6EPT8lWSHS9QY6S3KDyj8P?si=1b9ee574b990495f
https://open.spotify.com/track/1FCz670pJ73G2nWmydkLw2?si=0d85fb67339244dd
https://open.spotify.com/track/4WY3wLorn2QrcoLXBNpNib?si=b2e7c877b4d249d1
https://open.spotify.com/track/4PQDRTRxgb68ao1QZYGIpU?si=5282d47e9fd548cc
https://open.spotify.com/track/2f4trKAHr9pgQF51fpprYf?si=4ec152ce63544dd6
https://open.spotify.com/track/5wXt2nPhM5hN97tFE81ycr?si=ee469032c158461c
https://open.spotify.com/track/737EtW17MbnK6vtrNdqXPE?si=776b9da5f5dc4a2f
https://open.spotify.com/track/6VXwwWfz1IYRyDbJtJurI6?si=52adb63b9c304514
https://open.spotify.com/track/4l5KJpWbfGeqAyej5mKuuT?si=5abc28d747b04218
https://open.spotify.com/track/31PLq481Xd9HqFlZWySn1T?si=47f2b661313e4c69
https://open.spotify.com/track/4qHOYIBnr7eeWrmc94Ev4w?si=b577717278df430e
https://open.spotify.com/track/1U8b6lUsUCugMe8WDw7N2V?si=498753a00ce045e2
https://open.spotify.com/track/6aY1j5Nvbe8TnzrgJpVphd?si=b08d6bfff28f4694
https://open.spotify.com/track/6Jmal8Eur6b1qCqqlGn0oF?si=522f399a76ac4a59
https://open.spotify.com/track/2FAslAIJWS7FyRWSBfTAub?si=1c748d229a3b4d2c
https://open.spotify.com/track/2a0oQ6iFKFf4F9sKFhyZCq?si=dcde6c6b4f0f466e
https://open.spotify.com/track/6wBW9QrNcV6C2BipfBnEq2?si=ffcaac25ded34457
https://open.spotify.com/track/5COlf8w89sc1sN0RY7t2lo?si=7c36375c9b7446e7
https://open.spotify.com/track/64e9U3DonDMtdEZP4TNss2?si=75fccc7fd07f479a
https://open.spotify.com/track/3jXxejshIhhAP7mg9mNIfB?si=044d5bb7179e4119
https://open.spotify.com/track/3ztiJHnOo2ntf1qrRWCWBZ?si=531df0d5687a419a
https://open.spotify.com/track/0F5AY6M9pIoN03jPEuo5ts?si=8563d4590c844b6c
https://open.spotify.com/track/7ySqoR0cnCkntmp7UmyfYZ?si=00c3bc6dd6184f5c
https://open.spotify.com/track/5hMqtGijnPinuWkkxrSkl3?si=02da37c9214e478f
https://open.spotify.com/track/5QuGD4wmi7hCjv2JDM0v5f?si=bc54d26e32d54e04
https://open.spotify.com/track/6yTIGrJ5FwCmxHSJ8pxg4c?si=84acb0bee1b94882
https://open.spotify.com/track/6XK4Gjr7y9CDxJ4GXBpEKa?si=8fce5cdcc1e54315
https://open.spotify.com/track/3XfnpskwSDhZlonjEhyNfw?si=e9ea9266e3584eac
https://open.spotify.com/track/4W9S87QtnKKLnKOCaPBl0a?si=1aa961979d9e4fc6
https://open.spotify.com/track/6KmUHNl4PHNuCxYAu1yijA?si=a087ac66ecd74289
https://open.spotify.com/track/2SRO0cHnlRFZ40RIYiMPVH?si=6e171f14143949c6
https://open.spotify.com/track/7i79hzFEP1Qy3nSe4vBVlD?si=3dd75cd01fc04e99
https://open.spotify.com/track/45GICU9IIp2tMPStPcCzRK?si=6926a20058f94d6f
https://open.spotify.com/track/2HeweoK8r3UMBhPVOz3zDv?si=b74b7234941b43fa
https://open.spotify.com/track/4pPzwHas9qiGi1r84M3EGj?si=2b336ae2595040cb
https://open.spotify.com/track/6gIIhxRm4DhkkJO3iS44xr?si=ba8d59d9d38b44f3
https://open.spotify.com/track/1ERrqbv1lzUyQpCHTckOwP?si=386d01a57e4b4b07
https://open.spotify.com/track/0f1q2Pa2zZzyRvCU4UThzS?si=c8ffc75cde624284
https://open.spotify.com/track/3VEti6L1PE2EzompzQsNZ9?si=fe5cc27213e446bc
https://open.spotify.com/track/50EyR7YmHXuTZGbHxMm064?si=5e0145297e204f3e
https://open.spotify.com/track/1goCN5yP6nNhn5sprcCMjC?si=d06174b3c9b64404
https://open.spotify.com/track/2ZQvZMj1M7V4ZSsn7G1s59?si=cd8983e9ae474854
https://open.spotify.com/track/7r8zyOkJPByv4Z2taWQJOO?si=2cc5cd342501464b
https://open.spotify.com/track/2Bh8zkphL3WXfay99qTUVI?si=424bfb88481848f1
https://open.spotify.com/track/0SxGrLPRy6JxE9HtogWgVs?si=b837ddb3540945a2
https://open.spotify.com/track/7zPzQhFnWUaeBqEZEj4uqI?si=28c741bf46ec4bb7
https://open.spotify.com/track/7b42dLrWVexmzce80HCgXx?si=d6d45d24ebbb4fa0
https://open.spotify.com/track/1JumThE4gWEdKp778Q1xRo?si=fb4dc1a5daee4c6d
https://open.spotify.com/track/77QxsdGyRN4wpeZ35MFtLW?si=397cffc8ff324d92
https://open.spotify.com/track/43WNuCxGH0aJ9k40tNEL7u?si=b026927513e24ce1
https://open.spotify.com/track/0o5uW9nUettRcW0JOjyCwu?si=90c33e8e5fce40c2
https://open.spotify.com/track/7lvSuBTjyRz1aciG7NFrcJ?si=5540d5c234184260
https://open.spotify.com/track/3T71M7L4nSpSSfXpWPyRvl?si=dec4fa1d9ccc4459
https://open.spotify.com/track/1ksMUmkBb5pCpgmVTCPJzK?si=fcd611cd725f4e6b
https://open.spotify.com/track/02FcX1nvlk29RY20y5FB4C?si=7038ae7764e34739
https://open.spotify.com/track/3iD0a9tpL604kNN4BXvjOj?si=793ebc7876364c1b
https://open.spotify.com/track/74XC2E5nQeBCg29WyHzcpi?si=6f836c5416d842b2
https://open.spotify.com/track/7vv04rYaILTgPnKmNEb8wO?si=84441a3595164133
https://open.spotify.com/track/2041toKd8XoU1dxjW1aBzb?si=63d794bbd5114ccb
https://open.spotify.com/track/3PcZgpGscGOrMxyTCWcxlw?si=3ad3e5235a7d4531
https://open.spotify.com/track/1Y7G0YR3wQEqpo3k9wdNBS?si=d762c5c2e94d45c8
https://open.spotify.com/track/1WlmDiy18ZvXJutrTgI4fF?si=82e0c5ab1a0d46ca
https://open.spotify.com/track/6SCzfYTnwjfi46mP60BYLX?si=2f914e32811a4c63
https://open.spotify.com/track/1fK6rX7V7xmhn6ismkonRG?si=4fd397de9fff4e3e
https://open.spotify.com/track/5pGyOZXMGouVkvcc2KKnkq?si=4fbea5919fba4510
https://open.spotify.com/track/6YoI5B7Ufi2QnhhBSsGPkM?si=ce8eea8c6c534f7a
https://open.spotify.com/track/6E7w7OT5uLffRah11oPuq0?si=048081b10d914ab0
https://open.spotify.com/track/1StUTBd2b4ZOmVxlAUoW2P?si=92095ee174cf4f96
https://open.spotify.com/track/3LzfZMcI6GKmqxsP7AxBZ9?si=72e5d0d42fec4de1
https://open.spotify.com/track/2tdqVAGOZGg27cZKAXxUny?si=fe36149c1e0446ce
https://open.spotify.com/track/1uDHCxIyapOyf5HJY5ltTd?si=3ead8621ab0840f3
https://open.spotify.com/track/6swvZmgs64s3lVEUtqTwRX?si=ab028a4aaeb74472
https://open.spotify.com/track/2byabb9Jr9Zxdp9WQuPj23?si=ea7be5e7b25644d1
https://open.spotify.com/track/2XHYUmHTvsSZktyXuxONlv?si=1255ea9b363f44b8
https://open.spotify.com/track/318ZdtPGDsfTrhJclXvgjY?si=716ec0527715405f
https://open.spotify.com/track/6jLyOIDfTgTrfVbFz8QORv?si=d8a7d8036d2e41f8
https://open.spotify.com/track/6euXG4bG4NSdF9t4KA5ZLV?si=cee5a7848ff44f40
https://open.spotify.com/track/38sgZYb8TS0xopIvYkTK5T?si=21fc3cea0f794edb
https://open.spotify.com/track/71Urz9JmYoaedvlo76DHY7?si=12838fe90f0f44da
https://open.spotify.com/track/1VRzG9fgK6kPljy3faYJ21?si=020dd609011448f3
https://open.spotify.com/track/1KMJotcWWPl6MzBtdnoSAe?si=3b8a980ff40e4c37
https://open.spotify.com/track/3FBwOAG677ASqjipGNQyc1?si=9e3de0db2fe94038
https://open.spotify.com/track/3dc03MNEpHKJesp8pBsaK5?si=ac0de1a2a74c423a
https://open.spotify.com/track/7HRKVX3cVuFsynu8Oj8fat?si=ddcc80f7d5b84928



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.deps.json
───────────────────────────────────────
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "OTWLauncher/1.0.0": {
        "runtime": {
          "OTWLauncher.dll": {}
        }
      }
    }
  },
  "libraries": {
    "OTWLauncher/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.runtimeconfig.json
───────────────────────────────────────
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.WindowsDesktop.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": true
    }
  }
}



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\OTWLauncher.csproj.nuget.dgspec.json
───────────────────────────────────────
{
  "format": 1,
  "restore": {
    "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj": {}
  },
  "projects": {
    "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj",
        "projectName": "OTWLauncher",
        "projectPath": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj",
        "packagesPath": "C:\\Users\\ceram\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\obj\\",
        "projectStyle": "PackageReference",
        "configFilePaths": [
          "C:\\Users\\ceram\\AppData\\Roaming\\NuGet\\NuGet.Config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WindowsForms": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.408/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\project.assets.json
───────────────────────────────────────
{
  "version": 3,
  "targets": {
    "net8.0-windows7.0": {}
  },
  "libraries": {},
  "projectFileDependencyGroups": {
    "net8.0-windows7.0": []
  },
  "packageFolders": {
    "C:\\Users\\ceram\\.nuget\\packages\\": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj",
      "projectName": "OTWLauncher",
      "projectPath": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\OTWLauncher.csproj",
      "packagesPath": "C:\\Users\\ceram\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\ceram\\Music\\OTW_MUSIC_SYSTEM\\Launcher\\obj\\",
      "projectStyle": "PackageReference",
      "configFilePaths": [
        "C:\\Users\\ceram\\AppData\\Roaming\\NuGet\\NuGet.Config"
      ],
      "originalTargetFrameworks": [
        "net8.0-windows"
      ],
      "sources": {
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      }
    },
    "frameworks": {
      "net8.0-windows7.0": {
        "targetAlias": "net8.0-windows",
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          },
          "Microsoft.WindowsDesktop.App.WindowsForms": {
            "privateAssets": "none"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.408/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.csproj.FileListAbsolute.txt
───────────────────────────────────────
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.exe
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.deps.json
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.runtimeconfig.json
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.dll
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\bin\Debug\net8.0-windows\OTWLauncher.pdb
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.GeneratedMSBuildEditorConfig.editorconfig
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.AssemblyInfoInputs.cache
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.AssemblyInfo.cs
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.csproj.CoreCompileInputs.cache
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.dll
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\refint\OTWLauncher.dll
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.pdb
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\OTWLauncher.genruntimeconfig.cache
C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\Launcher\obj\Debug\net8.0-windows\ref\OTWLauncher.dll



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\modules\data_loader.py
───────────────────────────────────────
import os

def accounts():
    """
    Lee cuentas de Spotify desde data/spotify_accounts.txt
    Formato: correo:contraseÃ±a
    """
    file_path = os.path.join("data", "spotify_accounts.txt")
    
    if not os.path.exists(file_path):
        print("âŒ No se encontrÃ³ el archivo de cuentas:", file_path)
        return []

    with open(file_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    result = []
    for line in lines:
        if ":" in line:
            email, pwd = line.strip().split(":", 1)
            result.append((email, pwd))

    return result


def load_data(folder):
    """
    Lee proxies desde data/proxy_pool.txt
    Formato: ip:port:user:password
    """
    proxies = []
    proxy_path = os.path.join(folder, "proxy_pool.txt")

    if os.path.exists(proxy_path):
        with open(proxy_path, "r", encoding="utf-8") as f:
            proxies = [line.strip() for line in f if line.strip()]
    else:
        print("âŒ No se encontrÃ³ el archivo de proxies:", proxy_path)

    return proxies, [], [], [], []



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\accounts.txt
───────────────────────────────────────
fitownhug@nekosan.uk:ChristIsKing2025k!



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\artist_player.py
───────────────────────────────────────
import uiautomator2 as u2
import subprocess
import time
import random
import sys
import os

# Ruta de artistas
ARTIST_PATH = "data/artists.txt"

# Agregar carpeta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def load_artists():
    with open(ARTIST_PATH, "r") as f:
        return [line.strip() for line in f if line.strip()]

def human_sleep(min_sec=1.5, max_sec=3.5):
    time.sleep(random.uniform(min_sec, max_sec))

def handle_open_with_dialog(d):
    if d(textContains="Spotify").exists(timeout=5):
        print("ðŸ“² Seleccionando Spotify como app predeterminada")
        d(textContains="Spotify").click()
        time.sleep(2)
        if d(textContains="Siempre").exists:
            d(textContains="Siempre").click()
            time.sleep(2)

def open_artist_intent(d, artist_url):
    print("ðŸŽ¤ Abriendo artista por intent con URL")
    d.press("home")
    time.sleep(1)
    subprocess.run(["adb", "shell", "am", "start", "-a", "android.intent.action.VIEW", "-d", artist_url])
    time.sleep(6)
    handle_open_with_dialog(d)
    time.sleep(6)

def press_play(d):
    try:
        if d(descriptionContains="Play").exists(timeout=8):
            green_play = d(descriptionContains="Play")
            bounds = green_play.info.get('bounds', {})
            if bounds:
                print("â–¶ï¸ Presionando el botÃ³n verde de Play")
                green_play.click()
    except Exception as e:
        print(f"âš ï¸ Error dando play: {e}")
    time.sleep(2)

def press_follow_if_needed(d):
    try:
        if d(textMatches="(?i)follow").exists(timeout=6):
            print("âž• Presionando FOLLOW")
            d(textMatches="(?i)follow").click()
            time.sleep(2)
    except Exception as e:
        print(f"âš ï¸ Error dando follow: {e}")

def activate_shuffle(d):
    try:
        if d(descriptionContains="Shuffle").exists(timeout=5):
            print("ðŸ”€ Activando modo Shuffle")
            d(descriptionContains="Shuffle").click()
            time.sleep(2)
            if d(textContains="Shuffle").exists:
                d(textContains="Shuffle").click()
                time.sleep(1)
    except Exception as e:
        print(f"âš ï¸ Error activando shuffle: {e}")

def artist_mode():
    print("ðŸŽ¶ Modo Artistas Iniciado")
    artists = load_artists()
    if not artists:
        print("âŒ No hay artistas en el archivo")
        return

    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    device_orders = {device_id: random.sample(artists, len(artists)) for device_id in devices}

    while True:
        for device_id in devices:
            try:
                d = u2.connect_usb(device_id)
                print(f"ðŸ“± Dispositivo: {device_id}")

                artist_queue = device_orders[device_id]
                if not artist_queue:
                    artist_queue = random.sample(artists, len(artists))
                    device_orders[device_id] = artist_queue
                artist_url = artist_queue.pop()

                open_artist_intent(d, artist_url)
                time.sleep(5)

                press_follow_if_needed(d)
                activate_shuffle(d)
                press_play(d)

            except Exception as e:
                print(f"âŒ Error con el dispositivo {device_id}: {e}")

        print("â±ï¸ Esperando antes de cambiar de artista")
        wait_minutes = random.randint(3, 5)
        time.sleep(wait_minutes * 60)

if __name__ == "__main__":
    artist_mode()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\data_loader.py
───────────────────────────────────────
import os

def accounts():
    """
    Lee cuentas de Spotify desde data/spotify_accounts.txt
    Formato: correo:contraseÃ±a
    """
    file_path = os.path.join("data", "spotify_accounts.txt")
    
    if not os.path.exists(file_path):
        print("âŒ No se encontrÃ³ el archivo de cuentas:", file_path)
        return []

    with open(file_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    result = []
    for line in lines:
        if ":" in line:
            email, pwd = line.strip().split(":", 1)
            result.append((email, pwd))

    return result


def load_data(folder):
    """
    Lee proxies desde data/proxy_pool.txt
    Formato: ip:port:user:password
    """
    proxies = []
    proxy_path = os.path.join(folder, "proxy_pool.txt")

    if os.path.exists(proxy_path):
        with open(proxy_path, "r", encoding="utf-8") as f:
            proxies = [line.strip() for line in f if line.strip()]
    else:
        print("âŒ No se encontrÃ³ el archivo de proxies:", proxy_path)

    return proxies, [], [], [], []



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\install_required_apps.py
───────────────────────────────────────
import subprocess
import time
import os
import sys

# Ruta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# Lista de APKs requeridas
REQUIRED_APKS = [
    "apks/Spotify.apk",
    "apks/GoogleSearch.apk"
]

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def install_apks_on_device(device_id):
    for apk_path in REQUIRED_APKS:
        if os.path.exists(apk_path):
            print(f"ðŸ“² Instalando {os.path.basename(apk_path)} en {device_id}")
            subprocess.run(["adb", "-s", device_id, "install", "-r", apk_path])
            time.sleep(2)
        else:
            print(f"âŒ APK no encontrado: {apk_path}")

def install_required_apps():
    print("ðŸ“¦ Instalando apps requeridas en todos los dispositivos")
    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    for device_id in devices:
        try:
            install_apks_on_device(device_id)
        except Exception as e:
            print(f"âš ï¸ Error instalando en {device_id}: {e}")

if __name__ == "__main__":
    install_required_apps()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\playlist_player.py
───────────────────────────────────────
import uiautomator2 as u2
import subprocess
import time
import random
import sys
import os

# Ruta de playlists
PLAYLIST_PATH = "data/playlists.txt"
FAVORITE_ARTISTS = ["Cerame", "Kairo la Sinfonia", "G Many", "Zeggy Beats"]

# Agregar carpeta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def load_playlists():
    with open(PLAYLIST_PATH, "r") as f:
        return [line.strip() for line in f if line.strip()]

def human_sleep(min_sec=1.5, max_sec=3.5):
    time.sleep(random.uniform(min_sec, max_sec))

def handle_open_with_dialog(d):
    if d(textContains="Spotify").exists(timeout=5):
        print("ðŸ“² Seleccionando Spotify como app predeterminada")
        d(textContains="Spotify").click()
        time.sleep(2)
        if d(textContains="Siempre").exists:
            d(textContains="Siempre").click()
            time.sleep(2)

def open_playlist_intent(d, playlist_url):
    print("ðŸŽµ Abriendo Spotify por intent con URL")
    d.press("home")
    time.sleep(1)
    subprocess.run(["adb", "shell", "am", "start", "-a", "android.intent.action.VIEW", "-d", playlist_url])
    time.sleep(6)
    handle_open_with_dialog(d)
    time.sleep(5)

def like_playlist_if_needed(d):
    try:
        plus_buttons = d(className="android.widget.ImageView", clickable=True, instance=0)
        if plus_buttons.exists(timeout=6):
            plus_buttons.click()
            print("â¤ï¸ Playlist guardada")
    except Exception as e:
        print(f"âš ï¸ Error al dar like a la playlist: {e}")
    time.sleep(2)

def activate_shuffle(d):
    try:
        if d(descriptionContains="Shuffle").exists(timeout=6):
            d(descriptionContains="Shuffle").click()
            time.sleep(3)
            if d(textContains="Smart Shuffle").exists(timeout=3):
                d(textContains="Shuffle").click()
                print("ðŸ”€ Shuffle activado (modo simple)")
            else:
                print("ðŸ”€ Shuffle activado")
    except Exception as e:
        print(f"âš ï¸ Error activando shuffle: {e}")
    time.sleep(2)

def press_play(d):
    try:
        if d(descriptionContains="Play").exists(timeout=6):
            d(descriptionContains="Play").click()
            print("â–¶ï¸ Reproduciendo playlist")
    except Exception as e:
        print(f"âš ï¸ Error dando play: {e}")
    time.sleep(2)

def scroll_and_interact(d):
    print("ðŸ‘† Explorando como fan")
    for _ in range(random.randint(3, 5)):
        d.swipe(0.5, 0.9, 0.5, 0.2)
        time.sleep(random.uniform(2, 4))
        if d(descriptionContains="Like").exists:
            d(descriptionContains="Like").click_exists(timeout=2)
            print("ðŸ’š Like a canciÃ³n")
        time.sleep(random.uniform(2, 5))

def playlist_mode():
    print("ðŸŽ¶ Modo Playlist Iniciado")
    playlists = load_playlists()
    if not playlists:
        print("âŒ No hay playlists en el archivo")
        return

    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    device_orders = {device_id: random.sample(playlists, len(playlists)) for device_id in devices}

    while True:
        for device_id in devices:
            try:
                d = u2.connect_usb(device_id)
                print(f"ðŸ“± Dispositivo: {device_id}")

                playlist_queue = device_orders[device_id]
                if not playlist_queue:
                    playlist_queue = random.sample(playlists, len(playlists))
                    device_orders[device_id] = playlist_queue
                playlist_url = playlist_queue.pop()

                open_playlist_intent(d, playlist_url)
                time.sleep(5)

                like_playlist_if_needed(d)
                activate_shuffle(d)
                press_play(d)

                print("ðŸ§  Simulando comportamiento humano por 10 minutos")
                scroll_and_interact(d)
                time.sleep(random.randint(600, 660))

                print("ðŸ§˜â€â™‚ï¸ Esperando 30 minutos antes de repetir...")
                time.sleep(random.randint(1800, 2100))

            except Exception as e:
                print(f"âŒ Error con el dispositivo {device_id}: {e}")

if __name__ == "__main__":
    playlist_mode()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\proxy_pool.txt
───────────────────────────────────────
149.6.162.2:80:fpelmuks-1:0lrxoh26it92
149.14.243.178:80:fpelmuks-2:0lrxoh26it92
146.70.40.94:80:fpelmuks-3:0lrxoh26it92
149.6.162.10:80:fpelmuks-4:0lrxoh26it92
154.13.90.91:80:fpelmuks-5:0lrxoh26it92
107.155.114.18:80:fpelmuks-6:0lrxoh26it92
185.76.11.212:80:fpelmuks-7:0lrxoh26it92
107.155.114.2:80:fpelmuks-8:0lrxoh26it92
149.6.162.2:80:fpelmuks-9:0lrxoh26it92
149.14.243.178:80:fpelmuks-10:0lrxoh26it92
146.70.40.94:80:fpelmuks-11:0lrxoh26it92
149.6.162.10:80:fpelmuks-12:0lrxoh26it92
154.13.90.91:80:fpelmuks-13:0lrxoh26it92
107.155.114.18:80:fpelmuks-14:0lrxoh26it92
185.76.11.212:80:fpelmuks-15:0lrxoh26it92
107.155.114.2:80:fpelmuks-16:0lrxoh26it92
149.6.162.2:80:fpelmuks-17:0lrxoh26it92
149.14.243.178:80:fpelmuks-18:0lrxoh26it92
146.70.40.94:80:fpelmuks-19:0lrxoh26it92
149.6.162.10:80:fpelmuks-20:0lrxoh26it92
154.13.90.91:80:fpelmuks-21:0lrxoh26it92
107.155.114.18:80:fpelmuks-22:0lrxoh26it92
185.76.11.212:80:fpelmuks-23:0lrxoh26it92
107.155.114.2:80:fpelmuks-24:0lrxoh26it92
149.6.162.2:80:fpelmuks-25:0lrxoh26it92
149.14.243.178:80:fpelmuks-26:0lrxoh26it92
146.70.40.94:80:fpelmuks-27:0lrxoh26it92
149.6.162.10:80:fpelmuks-28:0lrxoh26it92
154.13.90.91:80:fpelmuks-29:0lrxoh26it92
107.155.114.18:80:fpelmuks-30:0lrxoh26it92
185.76.11.212:80:fpelmuks-31:0lrxoh26it92
107.155.114.2:80:fpelmuks-32:0lrxoh26it92
149.6.162.2:80:fpelmuks-33:0lrxoh26it92
149.14.243.178:80:fpelmuks-34:0lrxoh26it92
146.70.40.94:80:fpelmuks-35:0lrxoh26it92
149.6.162.10:80:fpelmuks-36:0lrxoh26it92
154.13.90.91:80:fpelmuks-37:0lrxoh26it92
107.155.114.18:80:fpelmuks-38:0lrxoh26it92
185.76.11.212:80:fpelmuks-39:0lrxoh26it92
107.155.114.2:80:fpelmuks-40:0lrxoh26it92
149.6.162.2:80:fpelmuks-41:0lrxoh26it92
149.14.243.178:80:fpelmuks-42:0lrxoh26it92
146.70.40.94:80:fpelmuks-43:0lrxoh26it92
149.6.162.10:80:fpelmuks-44:0lrxoh26it92
154.13.90.91:80:fpelmuks-45:0lrxoh26it92
107.155.114.18:80:fpelmuks-46:0lrxoh26it92
185.76.11.212:80:fpelmuks-47:0lrxoh26it92
107.155.114.2:80:fpelmuks-48:0lrxoh26it92
149.6.162.2:80:fpelmuks-49:0lrxoh26it92
149.14.243.178:80:fpelmuks-50:0lrxoh26it92
146.70.40.94:80:fpelmuks-51:0lrxoh26it92
149.6.162.10:80:fpelmuks-52:0lrxoh26it92
154.13.90.91:80:fpelmuks-53:0lrxoh26it92
107.155.114.18:80:fpelmuks-54:0lrxoh26it92
185.76.11.212:80:fpelmuks-55:0lrxoh26it92
107.155.114.2:80:fpelmuks-56:0lrxoh26it92
149.6.162.2:80:fpelmuks-57:0lrxoh26it92
149.14.243.178:80:fpelmuks-58:0lrxoh26it92
146.70.40.94:80:fpelmuks-59:0lrxoh26it92
149.6.162.10:80:fpelmuks-60:0lrxoh26it92
154.13.90.91:80:fpelmuks-61:0lrxoh26it92
107.155.114.18:80:fpelmuks-62:0lrxoh26it92
185.76.11.212:80:fpelmuks-63:0lrxoh26it92
107.155.114.2:80:fpelmuks-64:0lrxoh26it92
149.6.162.2:80:fpelmuks-65:0lrxoh26it92
149.14.243.178:80:fpelmuks-66:0lrxoh26it92
146.70.40.94:80:fpelmuks-67:0lrxoh26it92
149.6.162.10:80:fpelmuks-68:0lrxoh26it92
154.13.90.91:80:fpelmuks-69:0lrxoh26it92
107.155.114.18:80:fpelmuks-70:0lrxoh26it92
185.76.11.212:80:fpelmuks-71:0lrxoh26it92
107.155.114.2:80:fpelmuks-72:0lrxoh26it92
149.6.162.2:80:fpelmuks-73:0lrxoh26it92
149.14.243.178:80:fpelmuks-74:0lrxoh26it92
146.70.40.94:80:fpelmuks-75:0lrxoh26it92
149.6.162.10:80:fpelmuks-76:0lrxoh26it92
154.13.90.91:80:fpelmuks-77:0lrxoh26it92
107.155.114.18:80:fpelmuks-78:0lrxoh26it92
185.76.11.212:80:fpelmuks-79:0lrxoh26it92
107.155.114.2:80:fpelmuks-80:0lrxoh26it92
149.6.162.2:80:fpelmuks-81:0lrxoh26it92
149.14.243.178:80:fpelmuks-82:0lrxoh26it92
146.70.40.94:80:fpelmuks-83:0lrxoh26it92
149.6.162.10:80:fpelmuks-84:0lrxoh26it92
154.13.90.91:80:fpelmuks-85:0lrxoh26it92
107.155.114.18:80:fpelmuks-86:0lrxoh26it92
185.76.11.212:80:fpelmuks-87:0lrxoh26it92
107.155.114.2:80:fpelmuks-88:0lrxoh26it92
149.6.162.2:80:fpelmuks-89:0lrxoh26it92
149.14.243.178:80:fpelmuks-90:0lrxoh26it92
146.70.40.94:80:fpelmuks-91:0lrxoh26it92
149.6.162.10:80:fpelmuks-92:0lrxoh26it92
154.13.90.91:80:fpelmuks-93:0lrxoh26it92
107.155.114.18:80:fpelmuks-94:0lrxoh26it92
185.76.11.212:80:fpelmuks-95:0lrxoh26it92
107.155.114.2:80:fpelmuks-96:0lrxoh26it92
149.6.162.2:80:fpelmuks-97:0lrxoh26it92
149.14.243.178:80:fpelmuks-98:0lrxoh26it92
146.70.40.94:80:fpelmuks-99:0lrxoh26it92
149.6.162.10:80:fpelmuks-100:0lrxoh26it92
154.13.90.91:80:fpelmuks-101:0lrxoh26it92
107.155.114.18:80:fpelmuks-102:0lrxoh26it92
185.76.11.212:80:fpelmuks-103:0lrxoh26it92
107.155.114.2:80:fpelmuks-104:0lrxoh26it92
149.6.162.2:80:fpelmuks-105:0lrxoh26it92
149.14.243.178:80:fpelmuks-106:0lrxoh26it92
146.70.40.94:80:fpelmuks-107:0lrxoh26it92
149.6.162.10:80:fpelmuks-108:0lrxoh26it92
154.13.90.91:80:fpelmuks-109:0lrxoh26it92
107.155.114.18:80:fpelmuks-110:0lrxoh26it92
185.76.11.212:80:fpelmuks-111:0lrxoh26it92
107.155.114.2:80:fpelmuks-112:0lrxoh26it92
149.6.162.2:80:fpelmuks-113:0lrxoh26it92
149.14.243.178:80:fpelmuks-114:0lrxoh26it92
146.70.40.94:80:fpelmuks-115:0lrxoh26it92
149.6.162.10:80:fpelmuks-116:0lrxoh26it92
154.13.90.91:80:fpelmuks-117:0lrxoh26it92
107.155.114.18:80:fpelmuks-118:0lrxoh26it92
185.76.11.212:80:fpelmuks-119:0lrxoh26it92
107.155.114.2:80:fpelmuks-120:0lrxoh26it92
149.6.162.2:80:fpelmuks-121:0lrxoh26it92
149.14.243.178:80:fpelmuks-122:0lrxoh26it92
146.70.40.94:80:fpelmuks-123:0lrxoh26it92
149.6.162.10:80:fpelmuks-124:0lrxoh26it92
154.13.90.91:80:fpelmuks-125:0lrxoh26it92
107.155.114.18:80:fpelmuks-126:0lrxoh26it92
185.76.11.212:80:fpelmuks-127:0lrxoh26it92
107.155.114.2:80:fpelmuks-128:0lrxoh26it92
149.6.162.2:80:fpelmuks-129:0lrxoh26it92
149.14.243.178:80:fpelmuks-130:0lrxoh26it92
146.70.40.94:80:fpelmuks-131:0lrxoh26it92
149.6.162.10:80:fpelmuks-132:0lrxoh26it92
154.13.90.91:80:fpelmuks-133:0lrxoh26it92
107.155.114.18:80:fpelmuks-134:0lrxoh26it92
185.76.11.212:80:fpelmuks-135:0lrxoh26it92
107.155.114.2:80:fpelmuks-136:0lrxoh26it92
149.6.162.2:80:fpelmuks-137:0lrxoh26it92
149.14.243.178:80:fpelmuks-138:0lrxoh26it92
146.70.40.94:80:fpelmuks-139:0lrxoh26it92
149.6.162.10:80:fpelmuks-140:0lrxoh26it92
154.13.90.91:80:fpelmuks-141:0lrxoh26it92
107.155.114.18:80:fpelmuks-142:0lrxoh26it92
185.76.11.212:80:fpelmuks-143:0lrxoh26it92
107.155.114.2:80:fpelmuks-144:0lrxoh26it92
149.6.162.2:80:fpelmuks-145:0lrxoh26it92
149.14.243.178:80:fpelmuks-146:0lrxoh26it92
146.70.40.94:80:fpelmuks-147:0lrxoh26it92
149.6.162.10:80:fpelmuks-148:0lrxoh26it92
154.13.90.91:80:fpelmuks-149:0lrxoh26it92
107.155.114.18:80:fpelmuks-150:0lrxoh26it92
185.76.11.212:80:fpelmuks-151:0lrxoh26it92
107.155.114.2:80:fpelmuks-152:0lrxoh26it92
149.6.162.2:80:fpelmuks-153:0lrxoh26it92
149.14.243.178:80:fpelmuks-154:0lrxoh26it92
146.70.40.94:80:fpelmuks-155:0lrxoh26it92
149.6.162.10:80:fpelmuks-156:0lrxoh26it92
154.13.90.91:80:fpelmuks-157:0lrxoh26it92
107.155.114.18:80:fpelmuks-158:0lrxoh26it92
185.76.11.212:80:fpelmuks-159:0lrxoh26it92
107.155.114.2:80:fpelmuks-160:0lrxoh26it92
149.6.162.2:80:fpelmuks-161:0lrxoh26it92
149.14.243.178:80:fpelmuks-162:0lrxoh26it92
146.70.40.94:80:fpelmuks-163:0lrxoh26it92
149.6.162.10:80:fpelmuks-164:0lrxoh26it92
154.13.90.91:80:fpelmuks-165:0lrxoh26it92
107.155.114.18:80:fpelmuks-166:0lrxoh26it92
185.76.11.212:80:fpelmuks-167:0lrxoh26it92
107.155.114.2:80:fpelmuks-168:0lrxoh26it92
149.6.162.2:80:fpelmuks-169:0lrxoh26it92
149.14.243.178:80:fpelmuks-170:0lrxoh26it92
146.70.40.94:80:fpelmuks-171:0lrxoh26it92
149.6.162.10:80:fpelmuks-172:0lrxoh26it92
154.13.90.91:80:fpelmuks-173:0lrxoh26it92
107.155.114.18:80:fpelmuks-174:0lrxoh26it92
185.76.11.212:80:fpelmuks-175:0lrxoh26it92
107.155.114.2:80:fpelmuks-176:0lrxoh26it92
149.6.162.2:80:fpelmuks-177:0lrxoh26it92
149.14.243.178:80:fpelmuks-178:0lrxoh26it92
146.70.40.94:80:fpelmuks-179:0lrxoh26it92
149.6.162.10:80:fpelmuks-180:0lrxoh26it92
154.13.90.91:80:fpelmuks-181:0lrxoh26it92
107.155.114.18:80:fpelmuks-182:0lrxoh26it92
185.76.11.212:80:fpelmuks-183:0lrxoh26it92
107.155.114.2:80:fpelmuks-184:0lrxoh26it92
149.6.162.2:80:fpelmuks-185:0lrxoh26it92
149.14.243.178:80:fpelmuks-186:0lrxoh26it92
146.70.40.94:80:fpelmuks-187:0lrxoh26it92
149.6.162.10:80:fpelmuks-188:0lrxoh26it92
154.13.90.91:80:fpelmuks-189:0lrxoh26it92
107.155.114.18:80:fpelmuks-190:0lrxoh26it92
185.76.11.212:80:fpelmuks-191:0lrxoh26it92
107.155.114.2:80:fpelmuks-192:0lrxoh26it92
149.6.162.2:80:fpelmuks-193:0lrxoh26it92
149.14.243.178:80:fpelmuks-194:0lrxoh26it92
146.70.40.94:80:fpelmuks-195:0lrxoh26it92
149.6.162.10:80:fpelmuks-196:0lrxoh26it92
154.13.90.91:80:fpelmuks-197:0lrxoh26it92
107.155.114.18:80:fpelmuks-198:0lrxoh26it92
185.76.11.212:80:fpelmuks-199:0lrxoh26it92
107.155.114.2:80:fpelmuks-200:0lrxoh26it92
149.6.162.2:80:fpelmuks-201:0lrxoh26it92
149.14.243.178:80:fpelmuks-202:0lrxoh26it92
146.70.40.94:80:fpelmuks-203:0lrxoh26it92
149.6.162.10:80:fpelmuks-204:0lrxoh26it92
154.13.90.91:80:fpelmuks-205:0lrxoh26it92
107.155.114.18:80:fpelmuks-206:0lrxoh26it92
185.76.11.212:80:fpelmuks-207:0lrxoh26it92
107.155.114.2:80:fpelmuks-208:0lrxoh26it92
149.6.162.2:80:fpelmuks-209:0lrxoh26it92
149.14.243.178:80:fpelmuks-210:0lrxoh26it92
146.70.40.94:80:fpelmuks-211:0lrxoh26it92
149.6.162.10:80:fpelmuks-212:0lrxoh26it92
154.13.90.91:80:fpelmuks-213:0lrxoh26it92
107.155.114.18:80:fpelmuks-214:0lrxoh26it92
185.76.11.212:80:fpelmuks-215:0lrxoh26it92
107.155.114.2:80:fpelmuks-216:0lrxoh26it92
149.6.162.2:80:fpelmuks-217:0lrxoh26it92
149.14.243.178:80:fpelmuks-218:0lrxoh26it92
146.70.40.94:80:fpelmuks-219:0lrxoh26it92
149.6.162.10:80:fpelmuks-220:0lrxoh26it92
154.13.90.91:80:fpelmuks-221:0lrxoh26it92
107.155.114.18:80:fpelmuks-222:0lrxoh26it92
185.76.11.212:80:fpelmuks-223:0lrxoh26it92
107.155.114.2:80:fpelmuks-224:0lrxoh26it92
149.6.162.2:80:fpelmuks-225:0lrxoh26it92
149.14.243.178:80:fpelmuks-226:0lrxoh26it92
146.70.40.94:80:fpelmuks-227:0lrxoh26it92
149.6.162.10:80:fpelmuks-228:0lrxoh26it92
154.13.90.91:80:fpelmuks-229:0lrxoh26it92
107.155.114.18:80:fpelmuks-230:0lrxoh26it92
185.76.11.212:80:fpelmuks-231:0lrxoh26it92
107.155.114.2:80:fpelmuks-232:0lrxoh26it92
149.6.162.2:80:fpelmuks-233:0lrxoh26it92
149.14.243.178:80:fpelmuks-234:0lrxoh26it92
146.70.40.94:80:fpelmuks-235:0lrxoh26it92
149.6.162.10:80:fpelmuks-236:0lrxoh26it92
154.13.90.91:80:fpelmuks-237:0lrxoh26it92
107.155.114.18:80:fpelmuks-238:0lrxoh26it92
185.76.11.212:80:fpelmuks-239:0lrxoh26it92
107.155.114.2:80:fpelmuks-240:0lrxoh26it92
149.6.162.2:80:fpelmuks-241:0lrxoh26it92
149.14.243.178:80:fpelmuks-242:0lrxoh26it92
146.70.40.94:80:fpelmuks-243:0lrxoh26it92
149.6.162.10:80:fpelmuks-244:0lrxoh26it92
154.13.90.91:80:fpelmuks-245:0lrxoh26it92
107.155.114.18:80:fpelmuks-246:0lrxoh26it92
185.76.11.212:80:fpelmuks-247:0lrxoh26it92
107.155.114.2:80:fpelmuks-248:0lrxoh26it92
149.6.162.2:80:fpelmuks-249:0lrxoh26it92
149.14.243.178:80:fpelmuks-250:0lrxoh26it92



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\set_proxy.py
───────────────────────────────────────

import uiautomator2 as u2
import subprocess
import time
import sys
import os

# Agregar la raÃ­z del proyecto al path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from modules.data_loader import load_data

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def fill_field(d, label, value, max_swipes=3):
    for _ in range(max_swipes):
        if d(text=label).exists:
            break
        d.swipe(0.5, 0.8, 0.5, 0.2)
        time.sleep(0.5)

    if not d(text=label).wait(timeout=5):
        print(f"âŒ No se encontrÃ³ el campo {label}")
        return False

    print(f"âŒ¨ï¸ Escribiendo {label}...")
    d(text=label).click()
    time.sleep(0.4)
    d.clear_text()
    time.sleep(0.3)
    d.send_keys(value)
    time.sleep(0.3)

    if d(text="OK").exists:
        d(text="OK").click()
        time.sleep(0.3)

    return True

def force_turn_on_proxy(d):
    try:
        toggle_btn = d(resourceId="net.typeblog.socks:id/switch_action_button")
        if toggle_btn.exists:
            print("âš¡ Intentando encender el proxy...")
            toggle_btn.click()
            time.sleep(2)
            print("âœ… BotÃ³n presionado para encender proxy.")
        else:
            print("âŒ No se encontrÃ³ el botÃ³n de encendido del proxy.")
    except Exception as e:
        print(f"âš ï¸ Error al intentar encender el proxy: {e}")

def go_to_fast_com(d):
    try:
        print("ðŸŒ Abriendo fast.com para verificar conexiÃ³n...")
        d.app_start("com.android.chrome")
        time.sleep(5)
        d.send_keys("https://fast.com/es/")
        d.press("enter")
        time.sleep(10)
    except Exception as e:
        print(f"âš ï¸ Error al abrir fast.com: {e}")

def set_proxy():
    proxies, _, _, _, _ = load_data(".")
    print("ðŸ” Proxies cargados:")
    for p in proxies:
        print("  -", p)

    if not proxies:
        print("âŒ No hay proxies en proxy_pool.txt")
        return

    device_ids = get_connected_devices()
    if not device_ids:
        print("âŒ No hay dispositivos conectados")
        return

    for i, device_id in enumerate(device_ids):
        print(f"\nðŸš€ Configurando proxy en {device_id}â€¦")

        if i >= len(proxies):
            print("âš ï¸ No hay suficientes proxies para este dispositivo.")
            continue

        try:
            ip, port, user, passwd = proxies[i].strip().split(":")

            d = u2.connect_usb(device_id)
            print(f"âœ… Conectado: {device_id} | Proxy: {ip}:{port}")

            d.app_start("net.typeblog.socks")
            time.sleep(3)

            fill_field(d, "Server IP", ip)
            fill_field(d, "Server Port", port)
            fill_field(d, "Username", user)
            fill_field(d, "Password", passwd)

            force_turn_on_proxy(d)
            print(f"âœ… Proxy {ip}:{port} aplicado en {device_id}")

            go_to_fast_com(d)

        except Exception as e:
            print(f"âŒ Error en {device_id}: {e}")

if __name__ == '__main__':
    set_proxy()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\spotify_login.py
───────────────────────────────────────
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import time
import subprocess
import threading
import random
import cv2
import numpy as np
from PIL import Image
import io
import re
import logging
from datetime import datetime

# ConfiguraciÃ³n del sistema de logging
log_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), "logs")
os.makedirs(log_dir, exist_ok=True)
log_file = os.path.join(log_dir, f"spotify_login_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log")

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_file),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger("SpotifyLogin")

# Ruta al archivo de cuentas
ACCOUNTS_FILE = r"C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\accounts.txt"

# Constantes para la interacciÃ³n con la UI
SPOTIFY_PACKAGE = "com.spotify.music"
MAX_RETRIES = 5
RETRY_DELAY = 2  # segundos
HUMAN_DELAY_MIN = 0.8  # segundos
HUMAN_DELAY_MAX = 2.0  # segundos

# Templates para reconocimiento de imagen
TEMPLATES_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), "templates")
os.makedirs(TEMPLATES_DIR, exist_ok=True)

# Definir las rutas de las imÃ¡genes de referencia
TEMPLATE_LOGIN_BUTTON = os.path.join(TEMPLATES_DIR, "login_button.png")
TEMPLATE_CONTINUE_EMAIL = os.path.join(TEMPLATES_DIR, "continue_with_email.png")
TEMPLATE_EMAIL_FIELD = os.path.join(TEMPLATES_DIR, "email_field.png")
TEMPLATE_PASSWORD_FIELD = os.path.join(TEMPLATES_DIR, "password_field.png")
TEMPLATE_LOGIN_SUBMIT = os.path.join(TEMPLATES_DIR, "login_submit.png")

def human_delay():
    """Simula un retraso humano aleatorio"""
    delay = random.uniform(HUMAN_DELAY_MIN, HUMAN_DELAY_MAX)
    time.sleep(delay)

def get_connected_devices():
    """Obtiene la lista de dispositivos Android conectados por USB"""
    try:
        result = subprocess.run(
            ["adb", "devices"], 
            capture_output=True, 
            text=True, 
            check=True
        )
        
        devices = []
        for line in result.stdout.strip().split('\n')[1:]:
            if line and not line.startswith('*') and 'device' in line:
                device_id = line.split()[0]
                devices.append(device_id)
        
        logger.info(f"Dispositivos detectados: {devices}")
        return devices
    except subprocess.CalledProcessError as e:
        logger.error(f"Error al obtener dispositivos conectados: {e}")
        return []

def read_accounts():
    """Lee las cuentas desde el archivo accounts.txt"""
    try:
        with open(ACCOUNTS_FILE, 'r') as f:
            content = f.read().strip()
            # Separar por espacios o saltos de lÃ­nea
            accounts = re.split(r'\s+', content)
            
            # Filtrar entradas vacÃ­as y validar formato correo:contraseÃ±a
            valid_accounts = []
            for acc in accounts:
                if ':' in acc:
                    email, password = acc.split(':', 1)
                    if email and password:
                        valid_accounts.append((email, password))
            
            logger.info(f"Se leyeron {len(valid_accounts)} cuentas vÃ¡lidas")
            return valid_accounts
    except Exception as e:
        logger.error(f"Error al leer el archivo de cuentas: {e}")
        return []

def capture_screen(device_id):
    """Captura la pantalla del dispositivo y la convierte en imagen de OpenCV"""
    try:
        # Captura la pantalla usando ADB
        screen_bytes = subprocess.run(
            ["adb", "-s", device_id, "exec-out", "screencap -p"],
            capture_output=True,
            check=True
        ).stdout
        
        # Convierte la imagen a formato OpenCV
        img_array = np.frombuffer(screen_bytes, np.uint8)
        img = cv2.imdecode(img_array, cv2.IMREAD_COLOR)
        return img
    except Exception as e:
        logger.error(f"Error capturando pantalla del dispositivo {device_id}: {e}")
        return None

def find_element(image, template_path, threshold=0.7):
    """Encuentra un elemento en la pantalla usando template matching"""
    try:
        # Carga la plantilla
        template = cv2.imread(template_path, cv2.IMREAD_COLOR)
        if template is None:
            logger.error(f"No se pudo cargar la plantilla: {template_path}")
            return None
        
        # Realiza la coincidencia de plantillas
        result = cv2.matchTemplate(image, template, cv2.TM_CCOEFF_NORMED)
        min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)
        
        if max_val >= threshold:
            # Calcula la posiciÃ³n central del elemento
            w, h = template.shape[1], template.shape[0]
            center_x = max_loc[0] + w // 2
            center_y = max_loc[1] + h // 2
            return center_x, center_y, max_val
        else:
            return None
    except Exception as e:
        logger.error(f"Error en la bÃºsqueda de elementos: {e}")
        return None

def tap_element(device_id, position, jitter=10):
    """Toca un elemento en la pantalla con un ligero jitter para simular un toque humano"""
    try:
        x, y = position
        
        # AÃ±ade un pequeÃ±o jitter para hacer que el toque parezca mÃ¡s humano
        jitter_x = random.randint(-jitter, jitter)
        jitter_y = random.randint(-jitter, jitter)
        
        x += jitter_x
        y += jitter_y
        
        subprocess.run(
            ["adb", "-s", device_id, "shell", f"input tap {x} {y}"],
            check=True
        )
        logger.info(f"Tocando elemento en ({x}, {y}) en dispositivo {device_id}")
        return True
    except Exception as e:
        logger.error(f"Error al tocar elemento en {device_id}: {e}")
        return False

def clear_text_field(device_id):
    """Borra el contenido de un campo de texto seleccionado"""
    try:
        # Seleccionar todo el texto (CTRL+A)
        subprocess.run(
            ["adb", "-s", device_id, "shell", "input keyevent KEYCODE_CTRL_LEFT KEYCODE_A"],
            check=True
        )
        human_delay()
        
        # Borrar el texto seleccionado
        subprocess.run(
            ["adb", "-s", device_id, "shell", "input keyevent KEYCODE_DEL"],
            check=True
        )
        logger.info(f"Campo de texto borrado en dispositivo {device_id}")
        return True
    except Exception as e:
        logger.error(f"Error al borrar texto en {device_id}: {e}")
        
        # MÃ©todo alternativo: intentar borrar con mÃºltiples pulsaciones de borrado
        try:
            for _ in range(30):  # Intentar borrar hasta 30 caracteres
                subprocess.run(
                    ["adb", "-s", device_id, "shell", "input keyevent KEYCODE_DEL"],
                    check=True
                )
            logger.info(f"Campo de texto borrado usando mÃ©todo alternativo en dispositivo {device_id}")
            return True
        except Exception as e2:
            logger.error(f"Error al borrar texto usando mÃ©todo alternativo en {device_id}: {e2}")
            return False

def input_text(device_id, text):
    """Introduce texto en un campo de entrada"""
    try:
        # Escapar caracteres especiales
        text = text.replace(' ', '%s').replace('"', '\\"').replace("'", "\\'")
        
        subprocess.run(
            ["adb", "-s", device_id, "shell", f"input text '{text}'"],
            check=True
        )
        logger.info(f"Texto ingresado en dispositivo {device_id}")
        return True
    except Exception as e:
        logger.error(f"Error al introducir texto en {device_id}: {e}")
        return False

def open_spotify(device_id):
    """Abre la aplicaciÃ³n de Spotify en el dispositivo"""
    try:
        # Primero intentamos cerrar la app si ya estÃ¡ abierta
        try:
            subprocess.run(
                ["adb", "-s", device_id, "shell", f"am force-stop {SPOTIFY_PACKAGE}"],
                check=True
            )
            logger.info(f"Cerrando Spotify en dispositivo {device_id} (si estaba abierto)")
            time.sleep(1)  # PequeÃ±a pausa para asegurar que se cierre correctamente
        except Exception as e:
            logger.warning(f"No se pudo cerrar Spotify en {device_id}: {e}")
        
        # Ahora abrimos la aplicaciÃ³n
        subprocess.run(
            ["adb", "-s", device_id, "shell", f"am start -n {SPOTIFY_PACKAGE}/.MainActivity"],
            check=True
        )
        logger.info(f"Spotify abierto en dispositivo {device_id}")
        
        # Esperar a que la aplicaciÃ³n se cargue completamente
        time.sleep(5)  # Esperar 5 segundos para que la app se inicie
        
        return True
    except Exception as e:
        logger.error(f"Error al abrir Spotify en {device_id}: {e}")
        return False

def wait_for_element(device_id, template_path, max_attempts=10, delay=1, threshold=0.7):
    """Espera a que aparezca un elemento en la pantalla"""
    for attempt in range(max_attempts):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(delay)
            continue
            
        element_pos = find_element(screen, template_path, threshold)
        if element_pos:
            return element_pos
        
        time.sleep(delay)
    
    return None

def login_to_spotify(device_id, email, password):
    """Realiza el proceso de login en Spotify para un dispositivo especÃ­fico"""
    logger.info(f"Iniciando proceso de login en dispositivo {device_id} con cuenta {email}")
    
    # Paso 1: Abrir Spotify
    if not open_spotify(device_id):
        logger.error(f"No se pudo abrir Spotify en dispositivo {device_id}")
        return False
    
    # Paso 2: Buscar y presionar el botÃ³n "Log In"
    for attempt in range(MAX_RETRIES):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(RETRY_DELAY)
            continue
            
        # Buscar el botÃ³n de login
        login_pos = find_element(screen, TEMPLATE_LOGIN_BUTTON)
        if login_pos:
            logger.info(f"BotÃ³n 'Log In' encontrado en dispositivo {device_id}")
            tap_element(device_id, login_pos[:2])
            human_delay()
            break
        else:
            logger.warning(f"BotÃ³n 'Log In' no encontrado en dispositivo {device_id}. Intento {attempt+1}/{MAX_RETRIES}")
            time.sleep(RETRY_DELAY)
    else:
        logger.error(f"No se pudo encontrar el botÃ³n 'Log In' en dispositivo {device_id}")
        return False
    
    # Paso 3 y 4: Esperar a que cargue y presionar "Continue with Email"
    for attempt in range(MAX_RETRIES):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(RETRY_DELAY)
            continue
            
        # Buscar el botÃ³n de continuar con email
        continue_email_pos = find_element(screen, TEMPLATE_CONTINUE_EMAIL)
        if continue_email_pos:
            logger.info(f"BotÃ³n 'Continue with Email' encontrado en dispositivo {device_id}")
            tap_element(device_id, continue_email_pos[:2])
            human_delay()
            break
        else:
            logger.warning(f"BotÃ³n 'Continue with Email' no encontrado en dispositivo {device_id}. Intento {attempt+1}/{MAX_RETRIES}")
            time.sleep(RETRY_DELAY)
    else:
        logger.error(f"No se pudo encontrar el botÃ³n 'Continue with Email' en dispositivo {device_id}")
        return False
    
    # Paso 5 y 6: Detectar campo de email, limpiarlo y completarlo
    for attempt in range(MAX_RETRIES):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(RETRY_DELAY)
            continue
            
        # Buscar el campo de email
        email_field_pos = find_element(screen, TEMPLATE_EMAIL_FIELD)
        if email_field_pos:
            logger.info(f"Campo de email encontrado en dispositivo {device_id}")
            
            # Hacer doble tap para seleccionar todo el texto existente
            tap_element(device_id, email_field_pos[:2])
            human_delay()
            
            # Limpiar el campo
            clear_text_field(device_id)
            human_delay()
            
            # Ingresar el nuevo email
            input_text(device_id, email)
            human_delay()
            break
        else:
            logger.warning(f"Campo de email no encontrado en dispositivo {device_id}. Intento {attempt+1}/{MAX_RETRIES}")
            time.sleep(RETRY_DELAY)
    else:
        logger.error(f"No se pudo encontrar el campo de email en dispositivo {device_id}")
        return False
    
    # Paso 7 y 8: Detectar campo de contraseÃ±a, limpiarlo y completarlo
    for attempt in range(MAX_RETRIES):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(RETRY_DELAY)
            continue
            
        # Buscar el campo de contraseÃ±a
        password_field_pos = find_element(screen, TEMPLATE_PASSWORD_FIELD)
        if password_field_pos:
            logger.info(f"Campo de contraseÃ±a encontrado en dispositivo {device_id}")
            
            # Hacer tap para seleccionar el campo
            tap_element(device_id, password_field_pos[:2])
            human_delay()
            
            # Limpiar el campo
            clear_text_field(device_id)
            human_delay()
            
            # Ingresar la nueva contraseÃ±a
            input_text(device_id, password)
            human_delay()
            break
        else:
            logger.warning(f"Campo de contraseÃ±a no encontrado en dispositivo {device_id}. Intento {attempt+1}/{MAX_RETRIES}")
            time.sleep(RETRY_DELAY)
    else:
        logger.error(f"No se pudo encontrar el campo de contraseÃ±a en dispositivo {device_id}")
        return False
    
    # Paso 9: Presionar el botÃ³n "Log In" para iniciar sesiÃ³n
    for attempt in range(MAX_RETRIES):
        screen = capture_screen(device_id)
        if screen is None:
            time.sleep(RETRY_DELAY)
            continue
            
        # Buscar el botÃ³n de login final
        login_submit_pos = find_element(screen, TEMPLATE_LOGIN_SUBMIT)
        if login_submit_pos:
            logger.info(f"BotÃ³n 'Log In' (submit) encontrado en dispositivo {device_id}")
            tap_element(device_id, login_submit_pos[:2])
            human_delay()
            logger.info(f"Proceso de login completado en dispositivo {device_id}")
            return True
        else:
            logger.warning(f"BotÃ³n 'Log In' (submit) no encontrado en dispositivo {device_id}. Intento {attempt+1}/{MAX_RETRIES}")
            time.sleep(RETRY_DELAY)
    
    logger.error(f"No se pudo completar el proceso de login en dispositivo {device_id}")
    return False

def process_device(device_id, email, password):
    """Procesa un dispositivo especÃ­fico para iniciar sesiÃ³n"""
    try:
        success = login_to_spotify(device_id, email, password)
        return device_id, success
    except Exception as e:
        logger.error(f"Error procesando dispositivo {device_id}: {e}")
        return device_id, False

def save_template_images(device_id):
    """FunciÃ³n para capturar y guardar imÃ¡genes de plantilla desde un dispositivo"""
    try:
        # Esta funciÃ³n es Ãºtil para generar las plantillas iniciales
        # Capture la pantalla y guarde las secciones relevantes como plantillas
        
        logger.info(f"Iniciando captura de plantillas en dispositivo {device_id}")
        
        # Abrir Spotify
        open_spotify(device_id)
        time.sleep(5)
        
        # Capturar pantalla inicial
        screen = capture_screen(device_id)
        if screen is not None:
            cv2.imwrite(TEMPLATE_LOGIN_BUTTON, screen)  # Guarda la pantalla completa primero
            logger.info(f"Plantilla guardada en {TEMPLATE_LOGIN_BUTTON}")
            
            # Puedes recortar las Ã¡reas relevantes manualmente despuÃ©s
        
        logger.info("Proceso de captura de plantillas completo. Por favor, recorte manualmente las Ã¡reas relevantes.")
        return True
    except Exception as e:
        logger.error(f"Error al capturar plantillas: {e}")
        return False

def main():
    """FunciÃ³n principal que coordina el proceso de login en mÃºltiples dispositivos"""
    logger.info("Iniciando proceso de login en mÃºltiples dispositivos")
    
    # Obtener dispositivos conectados
    devices = get_connected_devices()
    if not devices:
        logger.error("No se encontraron dispositivos Android conectados")
        return
    
    logger.info(f"Dispositivos conectados: {len(devices)}")
    
    # Leer las cuentas
    accounts = read_accounts()
    if not accounts:
        logger.error("No se encontraron cuentas vÃ¡lidas en el archivo")
        return
    
    # Verificar si existen las plantillas
    templates_missing = not all(os.path.exists(t) for t in [
        TEMPLATE_LOGIN_BUTTON,
        TEMPLATE_CONTINUE_EMAIL,
        TEMPLATE_EMAIL_FIELD,
        TEMPLATE_PASSWORD_FIELD,
        TEMPLATE_LOGIN_SUBMIT
    ])
    
    if templates_missing:
        logger.warning("Faltan algunas plantillas para el reconocimiento visual.")
        logger.warning("AsegÃºrese de que las imÃ¡genes de plantilla estÃ©n en la carpeta 'templates'.")
        
        # Opcionalmente, podrÃ­a capturar plantillas aquÃ­ si no existen
        # save_template_images(devices[0])
    
    # Verificar que tengamos suficientes cuentas
    if len(accounts) < len(devices):
        logger.warning(f"Hay mÃ¡s dispositivos ({len(devices)}) que cuentas disponibles ({len(accounts)})")
    
    # Asignar cuentas a dispositivos
    device_accounts = []
    for i, device_id in enumerate(devices):
        if i < len(accounts):
            email, password = accounts[i]
            device_accounts.append((device_id, email, password))
        else:
            logger.warning(f"Dispositivo {device_id} no tiene cuenta asignada")
    
    # Crear hilos para procesar dispositivos en paralelo
    threads = []
    results = []
    
    for device_id, email, password in device_accounts:
        thread = threading.Thread(
            target=lambda d, e, p, r: r.append(process_device(d, e, p)),
            args=(device_id, email, password, results)
        )
        threads.append(thread)
        thread.start()
    
    # Esperar a que todos los hilos terminen
    for thread in threads:
        thread.join()
    
    # Contar Ã©xitos y fallos
    successes = sum(1 for _, success in results if success)
    failures = len(results) - successes
    
    logger.info(f"Proceso completado: {successes} dispositivos con login exitoso, {failures} fallos")

if __name__ == "__main__":
    main()



📄 Archivo encontrado: C:\Users\ceram\Music\OTW_MUSIC_SYSTEM\scripts\track_player.py
───────────────────────────────────────
import uiautomator2 as u2
import subprocess
import time
import random
import sys
import os

# Ruta de tracks
TRACK_PATH = "data/tracks.txt"

# Agregar carpeta base del proyecto
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

def get_connected_devices():
    result = subprocess.run(["adb", "devices"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")[1:]
    return [line.split()[0] for line in lines if "device" in line]

def load_tracks():
    with open(TRACK_PATH, "r") as f:
        return [line.strip() for line in f if line.strip()]

def human_sleep(min_sec=1.5, max_sec=3.5):
    time.sleep(random.uniform(min_sec, max_sec))

def handle_open_with_dialog(d):
    if d(textContains="Spotify").exists(timeout=5):
        print("ðŸ“² Seleccionando Spotify como app predeterminada")
        d(textContains="Spotify").click()
        time.sleep(2)
        if d(textContains="Siempre").exists:
            d(textContains="Siempre").click()
            time.sleep(2)

def open_track_intent(d, track_url):
    print("ðŸŽµ Abriendo Spotify por intent con URL del track")
    d.press("home")
    time.sleep(1)
    subprocess.run(["adb", "shell", "am", "start", "-a", "android.intent.action.VIEW", "-d", track_url])
    time.sleep(6)
    handle_open_with_dialog(d)
    time.sleep(6)

def press_play(d):
    try:
        if d(descriptionContains="Play").exists(timeout=8):
            green_play = d(descriptionContains="Play")
            bounds = green_play.info.get('bounds', {})
            if bounds:
                print("â–¶ï¸ Presionando el botÃ³n verde de Play")
                green_play.click()
    except Exception as e:
        print(f"âš ï¸ Error dando play: {e}")
    time.sleep(2)

def track_mode():
    print("ðŸŽ¶ Modo Tracks Iniciado")
    tracks = load_tracks()
    if not tracks:
        print("âŒ No hay tracks en el archivo")
        return

    devices = get_connected_devices()
    if not devices:
        print("âŒ No hay dispositivos conectados")
        return

    device_orders = {device_id: random.sample(tracks, len(tracks)) for device_id in devices}

    while True:
        for device_id in devices:
            try:
                d = u2.connect_usb(device_id)
                print(f"ðŸ“± Dispositivo: {device_id}")

                track_queue = device_orders[device_id]
                if not track_queue:
                    track_queue = random.sample(tracks, len(tracks))
                    device_orders[device_id] = track_queue
                track_url = track_queue.pop()

                open_track_intent(d, track_url)
                time.sleep(5)

                press_play(d)

            except Exception as e:
                print(f"âŒ Error con el dispositivo {device_id}: {e}")

        print("â±ï¸ Esperando antes de reproducir nuevos tracks")
        wait_minutes = random.randint(3, 5)
        time.sleep(wait_minutes * 60)

if __name__ == "__main__":
    track_mode()



